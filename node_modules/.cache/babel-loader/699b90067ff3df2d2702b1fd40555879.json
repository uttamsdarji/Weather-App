{"ast":null,"code":"var _jsxFileName = \"/Users/uttamdarji/Desktop/weather/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport wallpaper from './wallpaper.js'; //Components\n//import SearchBar from './components/SearchBar/SearchBar.js';\n\nimport WeatherTitle from './components/WeatherTitle/WeatherTitle.js';\nimport Clock from './components/Clock/Clock.js';\nimport Cloudiness from './components/Cloudiness/Cloudiness.js';\nimport WeatherIcon from './components/WeatherIcon/WeatherIcon.js';\nimport Temperature from './components/Temperature/Temperature.js';\nimport OtherWeatherData from './components/OtherWeatherData/OtherWeatherData.js';\nimport WeatherData from './components/WeatherData/WeatherData.js';\nimport LocationSearchBar from './components/LocationSearchBar/LocationSearchBar.js'; //import { threadId } from 'worker_threads';\n//Components\n//let location,latitude,longitude;\n//let location,latitude,longitude;\n\nclass WeatherApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latitude: null,\n      longitude: null,\n      data: \"\",\n      dayNight: \"\"\n    };\n\n    this.getMyLocation = () => {\n      let location = null;\n      let latitude = null;\n      let longitude = null;\n\n      if (window.navigator && window.navigator.geolocation) {\n        location = window.navigator.geolocation;\n      }\n\n      if (location) {\n        location.getCurrentPosition(position => {\n          latitude = position.coords.latitude;\n          longitude = position.coords.longitude;\n          this.setState({\n            latitude,\n            longitude\n          });\n        });\n      } // this.setLatLong(latitude,longitude);        \n\n    };\n\n    this.setLatLong = (latitude, longitude) => {\n      this.setState({\n        latitude: latitude,\n        longitude: longitude\n      });\n    };\n\n    this.newData = data => {\n      this.setState({\n        data: data\n      });\n    };\n\n    this.day_Night = time => {\n      this.setState({\n        dayNight: time\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.latitude) {\n      // this.setLatLong(this.getMyLocation().latitude,this.getMyLocation().longitude);\n      // console.log(this.state.latitude);\n      //   console.log(this.state.longitude);\n      this.getMyLocation();\n    }\n  }\n\n  render() {\n    if (this.state.data.main) {\n      let url = wallpaper(this.state.data.weather[0].id);\n      document.getElementById(\"root\").style.backgroundImage = \"url(\" + url + \")\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"rootContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(WeatherData, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      newData: this.newData,\n      data: this.state.data,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(LocationSearchBar, {\n      setLatLong: this.setLatLong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), this.state.data.main !== undefined || React.createElement(\"div\", {\n      className: \"lds-hourglass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), this.state.data.main && React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(WeatherTitle, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"leftBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Clock, {\n      data: this.state.data,\n      day_Night: this.day_Night,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Cloudiness, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(WeatherIcon, {\n      data: this.state.data,\n      dayNight: this.state.dayNight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Temperature, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(OtherWeatherData, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(WeatherApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/index.js"],"names":["React","ReactDOM","wallpaper","WeatherTitle","Clock","Cloudiness","WeatherIcon","Temperature","OtherWeatherData","WeatherData","LocationSearchBar","WeatherApp","Component","state","latitude","longitude","data","dayNight","getMyLocation","location","window","navigator","geolocation","getCurrentPosition","position","coords","setState","setLatLong","newData","day_Night","time","componentDidMount","render","main","url","weather","id","document","getElementById","style","backgroundImage","zipCode","countryCode","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport wallpaper from './wallpaper.js';\n\n//Components\n//import SearchBar from './components/SearchBar/SearchBar.js';\nimport WeatherTitle from './components/WeatherTitle/WeatherTitle.js';\nimport Clock from './components/Clock/Clock.js';\nimport Cloudiness from './components/Cloudiness/Cloudiness.js';\nimport WeatherIcon from './components/WeatherIcon/WeatherIcon.js';\nimport Temperature from './components/Temperature/Temperature.js';\nimport OtherWeatherData from './components/OtherWeatherData/OtherWeatherData.js';\nimport WeatherData from './components/WeatherData/WeatherData.js';\nimport LocationSearchBar from './components/LocationSearchBar/LocationSearchBar.js';\n//import { threadId } from 'worker_threads';\n//Components\n\n\n//let location,latitude,longitude;\n//let location,latitude,longitude;\nclass WeatherApp extends React.Component {\n  state = {\n      latitude: null,\n      longitude: null,\n      data: \"\",\n      dayNight: \"\",\n  };\n  \n\n  getMyLocation = () => {\n    let location = null;\n    let latitude = null;\n    let longitude = null;\n    if (window.navigator && window.navigator.geolocation) {\n      location = window.navigator.geolocation\n    }\n    if (location){\n      location.getCurrentPosition( (position) => {\n        latitude = (position.coords.latitude);\n        longitude = (position.coords.longitude);\n        this.setState({latitude, longitude});\n      });\n    }\n    // this.setLatLong(latitude,longitude);        \n  }  \n\n  setLatLong = (latitude,longitude) => {\n    this.setState({\n      latitude: latitude,\n      longitude: longitude,\n    });\n  };\n\n  newData = (data) => {\n    this.setState({\n      data: data,\n    })\n  }\n\n  day_Night = (time) => {\n    this.setState({\n      dayNight: time,\n    })\n  }\n\n  componentDidMount() {\n    if(!this.state.latitude) {\n      // this.setLatLong(this.getMyLocation().latitude,this.getMyLocation().longitude);\n      // console.log(this.state.latitude);\n      //   console.log(this.state.longitude);\n      this.getMyLocation();\n    }\n  }\n\n  render() {\n    if (this.state.data.main){\n      let url = wallpaper(this.state.data.weather[0].id);\n      document.getElementById(\"root\").style.backgroundImage = \"url(\"+url+\")\";\n    }\n    return(\n      <div className=\"rootContainer\">\n        <WeatherData \n          zipCode={this.state.zipCode} countryCode={this.state.countryCode} \n          newData={this.newData}\n          data={this.state.data}\n          latitude={this.state.latitude}\n          longitude={this.state.longitude}\n        />\n        {/* <SearchBar \n            zipCode={this.state.zipCode}\n            countryCode={this.state.countryCode}\n            latitude={this.state.latitude}\n            longitude={this.state.longitude}\n            onSubmit={this.handleSubmit}\n          /> */}\n          <LocationSearchBar setLatLong={this.setLatLong} />\n        {(this.state.data.main)!==undefined || <div className=\"lds-hourglass\"></div>}\n        {this.state.data.main &&\n        <div className='Container'>\n\n          <WeatherTitle zipCode={this.state.zipCode} countryCode={this.state.countryCode} data={this.state.data} />\n\n          <div className='leftBlock'>\n            <Clock data={this.state.data} day_Night={this.day_Night}/>\n\n            <Cloudiness \n              data={this.state.data}\n            />\n\n            <WeatherIcon \n              data={this.state.data}\n              dayNight={this.state.dayNight} \n            />\n\n            <Temperature data={this.state.data} />\n          </div>\n        \n          <OtherWeatherData data={this.state.data} />\n\n          \n\n        </div>\n        }\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(\n    <WeatherApp />,\n    document.getElementById(\"root\")\n);"]},"metadata":{},"sourceType":"module"}