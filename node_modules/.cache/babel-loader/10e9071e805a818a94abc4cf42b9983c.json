{"ast":null,"code":"var _jsxFileName = \"/Users/uttamdarji/Desktop/weather/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport IconId from './icon.js';\nimport { extname } from 'upath';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    this.props.onSubmit(e.target[0].value, e.target[1].value);\n    e.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Zip Code\",\n      ref: \"zip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Country Code\",\n      ref: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass WeatherTitle extends React.Component {\n  render() {\n    if (this.props.data.main) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.data.name, \", \", this.props.data.sys.country);\n    } else return null;\n  }\n\n}\n\nclass Cloudiness extends React.Component {\n  render() {\n    if (this.props.data.main) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.props.data.weather[0].description);\n    } else return null;\n  }\n\n}\n\nclass Icon extends React.Component {\n  render() {\n    if (this.props.data.main) {\n      const id = IconId[this.props.data.weather[0].id];\n      console.log(typeof id);\n      const url = \"http://openweathermap.org/img/wn/\" + id + \"d@2x.png\";\n      return React.createElement(\"img\", {\n        src: url,\n        alt: this.props.data.weather[0].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    } else return null;\n  }\n\n}\n\nclass Temperature extends React.Component {\n  render() {\n    if (this.props.data.main) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, (this.props.data.main.temp - 273).toFixed(2), \" C\");\n    } else return null;\n  }\n\n}\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.newData = this.newData.bind(this);\n    this.getMyLocation = this.getMyLocation.bind(this);\n    this.getMyLocation();\n  }\n\n  getMyLocation() {\n    this.props.getMyLocation();\n  }\n\n  fetchDataByZip(zipCode, countryCode) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(wdata => {\n      this.newData(wdata);\n    });\n  }\n\n  newData(data) {\n    this.props.newData(data);\n  }\n\n  fetchDataByGeo(latitude, longitude) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(wdata => {\n      this.newData(wdata);\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.zipCode && this.props.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (this.props.latitude !== null && this.props.longitude !== null) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  render() {\n    const data = this.props.data;\n\n    if (data) {\n      // return(\n      //     <h1>{data.id}</h1>\n      // );\n      return null;\n    } else return null;\n  }\n\n}\n\nlet location, latitude, longitude;\n\nclass WeatherApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zipCode: \"\",\n      countryCode: \"\",\n      data: \"\"\n    };\n    this.newData = this.newData.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getMyLocation = this.getMyLocation.bind(this);\n  }\n\n  getMyLocation() {\n    if (window.navigator && window.navigator.geolocation) {\n      location = window.navigator.geolocation;\n    }\n\n    if (location) {\n      location.getCurrentPosition(function (position) {\n        latitude = position.coords.latitude;\n        longitude = position.coords.longitude;\n      });\n    }\n  }\n\n  handleSubmit(zipCode, countryCode) {\n    this.setState({\n      zipCode: zipCode,\n      countryCode: countryCode\n    });\n  }\n\n  newData(data) {\n    this.setState({\n      data: data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(WeatherTitle, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(Cloudiness, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(Temperature, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(WeatherData, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      newData: this.newData,\n      data: this.state.data,\n      latitude: latitude,\n      longitude: longitude,\n      getMyLocation: this.getMyLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(WeatherApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 210\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/index.js"],"names":["React","ReactDOM","IconId","extname","SearchBar","Component","constructor","props","handleSubmit","bind","e","onSubmit","target","value","preventDefault","render","WeatherTitle","data","main","name","sys","country","Cloudiness","weather","description","Icon","id","console","log","url","Temperature","temp","toFixed","WeatherData","newData","getMyLocation","fetchDataByZip","zipCode","countryCode","fetch","then","results","json","wdata","fetchDataByGeo","latitude","longitude","componentDidMount","componentDidUpdate","prevProps","location","WeatherApp","state","window","navigator","geolocation","getCurrentPosition","position","coords","setState","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport IconId from './icon.js'\nimport { extname } from 'upath';\n\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleSubmit(e) {\n        this.props.onSubmit(e.target[0].value,e.target[1].value);\n        e.preventDefault();\n    }\n\n    render() {\n        return(\n            <div className=\"search\">\n                <form  onSubmit={this.handleSubmit}>\n                    <input type=\"text\" placeholder=\"Zip Code\" ref=\"zip\"/>\n                    <input type=\"text\" placeholder=\"Country Code\" ref=\"country\" />\n                    <input type=\"submit\" value=\"Search\" />\n                </form>\n            </div>\n        );\n    }\n}\n\nclass  WeatherTitle extends React.Component {\n    render() {\n        if(this.props.data.main) {\n            return (\n                <h1>{this.props.data.name}, {this.props.data.sys.country}</h1>\n            );\n        } else return null;\n    }\n}\n\nclass Cloudiness extends React.Component {\n    render() {\n        if(this.props.data.main) {\n            return(\n                <p>{this.props.data.weather[0].description}</p>\n            );\n        } else return null;\n    }\n}\n\nclass Icon extends React.Component {\n    render() {\n        if(this.props.data.main) {\n            const id = IconId[this.props.data.weather[0].id];\n            console.log(typeof(id));\n            const url = \"http://openweathermap.org/img/wn/\" + id + \"d@2x.png\";\n            return(\n                <img src={url} alt={this.props.data.weather[0].id}/>\n            );\n        } else return null;\n    }\n}\n\nclass Temperature extends React.Component {\n    render() {\n        if(this.props.data.main) {\n            return(\n                <h1>{(this.props.data.main.temp-273).toFixed(2)} C</h1>\n            );\n        } else return null;\n    }\n}\n\nclass WeatherData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.newData = this.newData.bind(this);\n        this.getMyLocation = this.getMyLocation.bind(this);\n        this.getMyLocation();\n    }\n\n    getMyLocation() {\n        this.props.getMyLocation();\n    }\n\n    fetchDataByZip(zipCode,countryCode) {\n        const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n        fetch(url)\n        .then(results => results.json())\n        .then((wdata) => {\n            this.newData(wdata);\n        });\n    }\n\n    newData(data) {\n        this.props.newData(data);\n    }\n\n    fetchDataByGeo(latitude,longitude) {\n        const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n        fetch(url)\n        .then(results => results.json())\n        .then((wdata) => {\n            this.newData(wdata);\n        });\n    }\n\n    componentDidMount() {\n        if(this.props.zipCode && this.props.countryCode){\n            this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n        }\n        if(this.props.latitude!==null && this.props.longitude!==null){\n            this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n        }\n    }\n   \n\n    componentDidUpdate(prevProps) {\n        if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n          this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n        }\n        if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n            this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n        }\n      }\n\n    render() {\n        const data = this.props.data;\n        if(data) {\n            // return(\n            //     <h1>{data.id}</h1>\n            // );\n            return null;\n        } else return null;\n    }\n}\n\nlet location,latitude,longitude;\n\nclass WeatherApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            zipCode: \"\",\n            countryCode: \"\",\n            data: \"\",\n        };\n        this.newData = this.newData.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.getMyLocation = this.getMyLocation.bind(this);\n    }\n    getMyLocation() {\n        if (window.navigator && window.navigator.geolocation) {\n            location = window.navigator.geolocation\n        }\n        if (location){\n            location.getCurrentPosition(function (position) {\n                latitude = (position.coords.latitude);\n                longitude = (position.coords.longitude);\n            });\n        }        \n    }\n\n    handleSubmit(zipCode,countryCode) {\n        this.setState({\n            zipCode: zipCode,\n            countryCode: countryCode\n        })\n    }\n    \n\n    newData(data) {\n        this.setState({\n            data: data,\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <SearchBar \n                    zipCode={this.state.zipCode}\n                    countryCode={this.state.countryCode}\n                    latitude={this.state.latitude}\n                    longitude={this.state.longitude}\n                    onSubmit={this.handleSubmit}\n                />\n                {/* <Clock /> */}\n                <WeatherTitle zipCode={this.state.zipCode} countryCode={this.state.countryCode} data={this.state.data} />\n                <Cloudiness data={this.state.data} />\n                <Icon data={this.state.data} />\n                <Temperature data={this.state.data} />\n                <WeatherData \n                    zipCode={this.state.zipCode} countryCode={this.state.countryCode} \n                    newData={this.newData}\n                    data={this.state.data}\n                    latitude={latitude}\n                    longitude={longitude}\n                    getMyLocation={this.getMyLocation}\n                />\n            </div>\n            \n        );\n    }\n}\n\n\nReactDOM.render(\n    <WeatherApp />,\n    document.getElementById(\"root\")\n);"]},"metadata":{},"sourceType":"module"}