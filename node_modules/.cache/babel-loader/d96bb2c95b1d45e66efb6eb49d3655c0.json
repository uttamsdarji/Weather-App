{"ast":null,"code":"import React from 'react';\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.newData = this.newData.bind(this);\n    this.getMyLocation = this.getMyLocation.bind(this);\n    this.getMyLocation();\n  }\n\n  getMyLocation() {\n    this.props.getMyLocation();\n  }\n\n  fetchDataByZip(zipCode, countryCode) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(wdata => {\n      this.newData(wdata);\n    });\n  }\n\n  newData(data) {\n    this.props.newData(data);\n  }\n\n  fetchDataByGeo(latitude, longitude) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(wdata => {\n      this.newData(wdata);\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.zipCode && this.props.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (this.props.latitude !== null && this.props.longitude !== null) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  render() {\n    //  const data = this.props.data;\n    // while(!data) {\n    //     return(\n    //       <div className=\"loader\">\n    //         <div class=\"lds-hourglass\"></div>\n    //       </div>\n    //     );\n    // }\n    return null; // else return null;\n  }\n\n}\n\nexport default WeatherData;","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/components/WeatherData/WeatherData.js"],"names":["React","WeatherData","Component","constructor","props","newData","bind","getMyLocation","fetchDataByZip","zipCode","countryCode","url","fetch","then","results","json","wdata","data","fetchDataByGeo","latitude","longitude","componentDidMount","componentDidUpdate","prevProps","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,aAAL;AACH;;AAEDA,EAAAA,aAAa,GAAG;AACZ,SAAKH,KAAL,CAAWG,aAAX;AACH;;AAEDC,EAAAA,cAAc,CAACC,OAAD,EAASC,WAAT,EAAsB;AAChC,UAAMC,GAAG,GAAG,yDAAyDF,OAAzD,GAAmE,GAAnE,GAAyEC,WAAzE,GAAuF,yCAAnG;AACAE,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADjB,EAECF,IAFD,CAEOG,KAAD,IAAW;AACb,WAAKX,OAAL,CAAaW,KAAb;AACH,KAJD;AAKH;;AAEDX,EAAAA,OAAO,CAACY,IAAD,EAAO;AACV,SAAKb,KAAL,CAAWC,OAAX,CAAmBY,IAAnB;AACH;;AAEDC,EAAAA,cAAc,CAACC,QAAD,EAAUC,SAAV,EAAqB;AAC/B,UAAMT,GAAG,GAAG,yDAAyDQ,QAAzD,GAAoE,OAApE,GAA8EC,SAA9E,GAA0F,yCAAtG;AACAR,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADjB,EAECF,IAFD,CAEOG,KAAD,IAAW;AACb,WAAKX,OAAL,CAAaW,KAAb;AACH,KAJD;AAKH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB,QAAG,KAAKjB,KAAL,CAAWK,OAAX,IAAsB,KAAKL,KAAL,CAAWM,WAApC,EAAgD;AAC5C,WAAKF,cAAL,CAAoB,KAAKJ,KAAL,CAAWK,OAA/B,EAAuC,KAAKL,KAAL,CAAWM,WAAlD;AACH;;AACD,QAAG,KAAKN,KAAL,CAAWe,QAAX,KAAsB,IAAtB,IAA8B,KAAKf,KAAL,CAAWgB,SAAX,KAAuB,IAAxD,EAA6D;AACzD,WAAKF,cAAL,CAAoB,KAAKd,KAAL,CAAWe,QAA/B,EAAwC,KAAKf,KAAL,CAAWgB,SAAnD;AACH;AACJ;;AAGDE,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKnB,KAAL,CAAWK,OAAX,KAAuBc,SAAS,CAACd,OAAjC,IAA4C,KAAKL,KAAL,CAAWM,WAAX,KAA2Ba,SAAS,CAACb,WAArF,EAAkG;AAChG,WAAKF,cAAL,CAAoB,KAAKJ,KAAL,CAAWK,OAA/B,EAAuC,KAAKL,KAAL,CAAWM,WAAlD;AACD;;AACD,QAAI,KAAKN,KAAL,CAAWe,QAAX,KAAwBI,SAAS,CAACJ,QAAlC,IAA8C,KAAKf,KAAL,CAAWgB,SAAX,KAAyBG,SAAS,CAACH,SAArF,EAAgG;AAC5F,WAAKF,cAAL,CAAoB,KAAKd,KAAL,CAAWe,QAA/B,EAAwC,KAAKf,KAAL,CAAWgB,SAAnD;AACH;AACF;;AAEHI,EAAAA,MAAM,GAAG;AACN;AACC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,WAAO,IAAP,CAVK,CAWL;AACH;;AAjEuC;;AAoE1C,eAAevB,WAAf","sourcesContent":["import React from 'react';\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n      super(props);\n      this.newData = this.newData.bind(this);\n      this.getMyLocation = this.getMyLocation.bind(this);\n      this.getMyLocation();\n  }\n\n  getMyLocation() {\n      this.props.getMyLocation();\n  }\n\n  fetchDataByZip(zipCode,countryCode) {\n      const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n      fetch(url)\n      .then(results => results.json())\n      .then((wdata) => {\n          this.newData(wdata);\n      });\n  }\n\n  newData(data) {\n      this.props.newData(data);\n  }\n\n  fetchDataByGeo(latitude,longitude) {\n      const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n      fetch(url)\n      .then(results => results.json())\n      .then((wdata) => {\n          this.newData(wdata);\n      });\n  }\n\n  componentDidMount() {\n      if(this.props.zipCode && this.props.countryCode){\n          this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n      }\n      if(this.props.latitude!==null && this.props.longitude!==null){\n          this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n      }\n  }\n \n\n  componentDidUpdate(prevProps) {\n      if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n        this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n      }\n      if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n          this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n      }\n    }\n\n  render() {\n     //  const data = this.props.data;\n      // while(!data) {\n      //     return(\n      //       <div className=\"loader\">\n      //         <div class=\"lds-hourglass\"></div>\n      //       </div>\n            \n      //     );\n      // }\n      return null;\n      // else return null;\n  }\n}\n\nexport default WeatherData;"]},"metadata":{},"sourceType":"module"}