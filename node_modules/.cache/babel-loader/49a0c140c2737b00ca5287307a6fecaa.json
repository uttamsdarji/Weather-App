{"ast":null,"code":"var _jsxFileName = \"/Users/uttamdarji/Desktop/weather/src/components/LocationSearchBar/LocationSearchBar.js\";\nimport React from 'react';\n\nclass LocationSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.fetchDataByZip(e.target.value);\n    };\n\n    this.fetchDataByZip = queryText => {\n      const url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/' + queryText + '.json?access_token=pk.eyJ1IjoidXNkYXJqaSIsImEiOiJjanhvbnNqY2QwODczM21ybnJybGUzM3l0In0.hUTTdbflff_BO_c7S3MldQ';\n      fetch(url).then(results => results.json()).then(sdata => {\n        this.setState({\n          data: sdata\n        });\n      });\n    };\n\n    this.state = {\n      data: null,\n      queryText: \"\"\n    };\n  }\n\n  render() {\n    console.log(this.state.data);\n    let options = {};\n\n    if (this.state.data.features) {\n      for (let feature in this.data.features) {\n        options[feature.id] = feature[\"place_name\"];\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"locationSearchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Location\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, options)));\n  }\n\n}\n\nexport default LocationSearchBar;","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/components/LocationSearchBar/LocationSearchBar.js"],"names":["React","LocationSearchBar","Component","constructor","props","handleChange","e","fetchDataByZip","target","value","queryText","url","fetch","then","results","json","sdata","setState","data","state","render","console","log","options","features","feature","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAAgD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,YARmB,GAQHC,CAAD,IAAO;AACpB,WAAKC,cAAL,CAAoBD,CAAC,CAACE,MAAF,CAASC,KAA7B;AACD,KAVkB;;AAAA,SAYnBF,cAZmB,GAYDG,SAAD,IAAe;AAC9B,YAAMC,GAAG,GAAG,uDAAqDD,SAArD,GAA+D,8GAA3E;AACAE,MAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADjB,EAECF,IAFD,CAEOG,KAAD,IAAW;AACf,aAAKC,QAAL,CAAc;AACZC,UAAAA,IAAI,EAAGF;AADK,SAAd;AAGD,OAND;AAOD,KArBkB;;AAEjB,SAAKG,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAG,IADI;AAEXR,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAiBDU,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWD,IAAvB;AACA,QAAIK,OAAO,GAAG,EAAd;;AACA,QAAG,KAAKJ,KAAL,CAAWD,IAAX,CAAgBM,QAAnB,EAA6B;AAC3B,WAAI,IAAIC,OAAR,IAAmB,KAAKP,IAAL,CAAUM,QAA7B,EAAuC;AACrCD,QAAAA,OAAO,CAACE,OAAO,CAACC,EAAT,CAAP,GAAsBD,OAAO,CAAC,YAAD,CAA7B;AACD;AACF;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,UAA/B;AAA0C,MAAA,QAAQ,EAAE,KAAKpB,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKkB,OAAL,CADF,CAFF,CADF;AAQD;;AAxC6C;;AA2ChD,eAAetB,iBAAf","sourcesContent":["import React from 'react';\n\n\nclass LocationSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data : null,\n      queryText: \"\",\n    };\n  }\n  \n  handleChange = (e) => {\n    this.fetchDataByZip(e.target.value);\n  };\n\n  fetchDataByZip = (queryText) => {\n    const url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/'+queryText+'.json?access_token=pk.eyJ1IjoidXNkYXJqaSIsImEiOiJjanhvbnNqY2QwODczM21ybnJybGUzM3l0In0.hUTTdbflff_BO_c7S3MldQ';\n    fetch(url)\n    .then(results => results.json())\n    .then((sdata) => {\n      this.setState({\n        data : sdata,\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.data);\n    let options = {};\n    if(this.state.data.features) {\n      for(let feature in this.data.features) {\n        options[feature.id] = feature[\"place_name\"];\n      }\n    }\n    return (\n      <div className=\"locationSearchBar\">\n        <input type=\"text\" placeholder=\"Location\" onChange={this.handleChange}/>\n        <ul>\n          <li>{options}</li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default LocationSearchBar;"]},"metadata":{},"sourceType":"module"}