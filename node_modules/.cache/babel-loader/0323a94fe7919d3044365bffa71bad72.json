{"ast":null,"code":"import React from 'react';\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setLatLong = () => {\n      let latitude = this.getMyLocation().latitude;\n      let longitude = this.getMyLocation().longitude;\n      this.props.setLatLong(latitude, longitude);\n\n      while (this.props.latitude === null) {}\n    };\n\n    this.getMyLocation = () => {\n      let location = null;\n      let latitude = null;\n      let longitude = null;\n\n      if (window.navigator && window.navigator.geolocation) {\n        location = window.navigator.geolocation;\n      }\n\n      if (location) {\n        location.getCurrentPosition(function (position) {\n          latitude = position.coords.latitude;\n          longitude = position.coords.longitude;\n          console.log(latitude);\n          console.log(longitude);\n        });\n        return {\n          latitude: latitude,\n          longitude: longitude\n        };\n      } //this.props.setLatLong(latitude,longitude);        \n\n    };\n\n    this.newData = data => {\n      this.props.newData(data);\n    };\n\n    this.fetchDataByGeo = (latitude, longitude) => {\n      const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n      fetch(url).then(results => results.json()).then(wdata => {\n        this.newData(wdata);\n      });\n    };\n\n    this.setLatLong(); //this.getMyLocation();\n    // this.latitude = this.getMyLocation().latitude;\n    // this.longitude = this.getMyLocation().longitude;\n  }\n\n  componentDidMount() {\n    if (this.props.latitude === null && this.props.longitude === null) {\n      this.setLatLong();\n    }\n\n    if (this.props.latitude !== null && this.props.longitude !== null) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default WeatherData;","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/components/WeatherData/WeatherData.js"],"names":["React","WeatherData","Component","constructor","props","setLatLong","latitude","getMyLocation","longitude","location","window","navigator","geolocation","getCurrentPosition","position","coords","console","log","newData","data","fetchDataByGeo","url","fetch","then","results","json","wdata","componentDidMount","componentDidUpdate","prevProps","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setLatLong();\n    //this.getMyLocation();\n    // this.latitude = this.getMyLocation().latitude;\n    // this.longitude = this.getMyLocation().longitude;\n  }\n\n  setLatLong = () => {\n    let latitude = this.getMyLocation().latitude;\n    let longitude = this.getMyLocation().longitude;\n    this.props.setLatLong(latitude,longitude);\n    while(this.props.latitude===null) {}\n  }\n\n  getMyLocation = () => {\n    let location = null;\n    let latitude = null;\n    let longitude = null;\n    if (window.navigator && window.navigator.geolocation) {\n      location = window.navigator.geolocation\n    }\n    if (location){\n      location.getCurrentPosition(function (position) {\n        latitude = (position.coords.latitude);\n        longitude = (position.coords.longitude);\n        console.log(latitude);\n        console.log(longitude);\n      });\n      return ({\n        latitude: latitude,\n        longitude: longitude\n      });\n    }\n    //this.props.setLatLong(latitude,longitude);        \n  }\n\n  newData = (data) => {\n    this.props.newData(data);\n  }\n\n  fetchDataByGeo = (latitude,longitude) => {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url)\n    .then(results => results.json())\n    .then((wdata) => {\n      this.newData(wdata);\n    });\n  }\n\n  componentDidMount() {\n    if(this.props.latitude===null && this.props.longitude===null) {\n      this.setLatLong();\n    }\n    if(this.props.latitude!==null && this.props.longitude!==null){\n      this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n    }\n  }\n \n\n  componentDidUpdate(prevProps) {\n    if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n      this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default WeatherData;"]},"metadata":{},"sourceType":"module"}