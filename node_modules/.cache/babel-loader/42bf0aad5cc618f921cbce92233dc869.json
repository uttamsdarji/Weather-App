{"ast":null,"code":"var _jsxFileName = \"/Users/uttamdarji/Desktop/weather/src/components/LocationSearchBar/LocationSearchBar.js\";\nimport React from 'react';\n\nclass LocationSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      if (e.target.value.length > 0) {\n        this.setState({\n          queryText: e.target.value\n        });\n        this.fetchDataByText(e.target.value);\n      } else {\n        this.setState({\n          data: null\n        });\n      }\n    };\n\n    this.handleClick = e => {\n      //console.log(e.target.key);\n      //console.log(e.key);\n      // console.log(e.target.getAttribute('indexkey'))\n      this.props.setLatLong(e.target.getAttribute('indexkey').split(\" \")[1], e.target.getAttribute('indexkey').split(\" \")[0]);\n    };\n\n    this.fetchDataByText = queryText => {\n      const url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/' + queryText + '.json?access_token=pk.eyJ1IjoidXNkYXJqaSIsImEiOiJjanhvbnNqY2QwODczM21ybnJybGUzM3l0In0.hUTTdbflff_BO_c7S3MldQ';\n      fetch(url).then(results => results.json()).then(sdata => {\n        this.setState({\n          data: sdata\n        });\n      });\n    };\n\n    this.state = {\n      data: null,\n      queryText: \"\"\n    };\n  }\n\n  render() {\n    let options = [];\n    const coordinates = {\n      latitude: \"\",\n      longitude: \"\"\n    };\n\n    if (this.state.data) {\n      for (let i = 0; i < this.state.data.features.length; i++) {\n        coordinates.latitude = this.state.data.features[i].geometry.coordinates[0];\n        coordinates.longitude = this.state.data.features[i].geometry.coordinates[1];\n        let indexKey = String(coordinates.latitude) + \" \" + String(coordinates.longitude);\n        options[i] = React.createElement(\"li\", {\n          indexkey: indexKey,\n          key: this.state.data.features[i].id,\n          onClick: this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, this.state.data.features[i][\"place_name\"]);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"locationSearchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, options));\n  }\n\n}\n\nexport default LocationSearchBar;","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/components/LocationSearchBar/LocationSearchBar.js"],"names":["React","LocationSearchBar","Component","constructor","props","handleChange","e","target","value","length","setState","queryText","fetchDataByText","data","handleClick","setLatLong","getAttribute","split","url","fetch","then","results","json","sdata","state","render","options","coordinates","latitude","longitude","i","features","geometry","indexKey","String","id"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nclass LocationSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data : null,\n      queryText: \"\",\n    };\n  }\n  \n  handleChange = (e) => {\n    if(e.target.value.length>0) {\n      this.setState({\n        queryText: e.target.value,\n      });\n      this.fetchDataByText(e.target.value);\n    } else {\n      this.setState({\n        data: null,\n      });\n    }\n  };\n\n  handleClick = (e) => {\n    //console.log(e.target.key);\n    //console.log(e.key);\n    // console.log(e.target.getAttribute('indexkey'))\n    this.props.setLatLong(e.target.getAttribute('indexkey').split(\" \")[1],e.target.getAttribute('indexkey').split(\" \")[0]);\n  }\n\n  fetchDataByText = (queryText) => {\n    const url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/'+queryText+'.json?access_token=pk.eyJ1IjoidXNkYXJqaSIsImEiOiJjanhvbnNqY2QwODczM21ybnJybGUzM3l0In0.hUTTdbflff_BO_c7S3MldQ';\n    fetch(url)\n    .then(results => results.json())\n    .then((sdata) => {\n      this.setState({\n        data : sdata,\n      });\n    });\n  }\n\n  render() {\n    let options=[];\n    const coordinates = {\n      latitude: \"\",\n      longitude: \"\"\n    };\n    if(this.state.data){\n    \n    for(let i=0; i<this.state.data.features.length; i++) {\n      coordinates.latitude=this.state.data.features[i].geometry.coordinates[0];\n      coordinates.longitude=this.state.data.features[i].geometry.coordinates[1];\n      let indexKey= (String(coordinates.latitude)+\" \"+String(coordinates.longitude));\n      options[i]=<li indexkey={indexKey} key={this.state.data.features[i].id} onClick={this.handleClick}>{this.state.data.features[i][\"place_name\"]}</li>\n    } \n  }\n  \n    return (\n      <div className=\"locationSearchBar\">\n        <input type=\"text\" onChange={this.handleChange} />\n        <ul>\n          {options}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default LocationSearchBar;"]},"metadata":{},"sourceType":"module"}