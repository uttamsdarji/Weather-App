{"ast":null,"code":"var _jsxFileName = \"/Users/uttamdarji/Desktop/weather/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport IconId from './icon.js';\nimport wallpaper from './wallpaper.js'; //Components\n\nimport SearchBar from './components/SearchBar/SearchBar.js';\nimport WeatherTitle from './components/WeatherTitle/WeatherTitle.js';\nimport Clock from './components/Clock/Clock.js';\nimport Cloudiness from './components/Cloudiness/Cloudiness.js'; // class Cloudiness extends React.Component {\n//     render() {\n//         if(this.props.data.main) {\n//             let data = \"\";\n//             let arr = this.props.data.weather[0].description.split(\" \");\n//             for (let i = 0; i < arr.length; i++) {\n//                 data+=arr[i][0].toUpperCase() + arr[i].slice(1) + \" \";\n//             }\n//             return(\n//                 <div className=\"cloudiness\">\n//                     <p>{data}</p>\n//                 </div>\n//             );\n//         } else return null;\n//     }\n// }\n\nclass Icon extends React.Component {\n  render() {\n    if (this.props.data.main) {\n      const id = IconId[this.props.data.weather[0].id];\n      const url = \"http://openweathermap.org/img/wn/\" + id + \"d@2x.png\";\n      return React.createElement(\"div\", {\n        className: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: url,\n        alt: this.props.data.weather[0].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    } else return null;\n  }\n\n}\n\nclass Temperature extends React.Component {\n  render() {\n    if (this.props.data.main) {\n      return React.createElement(\"div\", {\n        className: \"temp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, (this.props.data.main.temp - 273).toFixed(2), \" \\u2103\"));\n    } else return null;\n  }\n\n}\n\nclass OtherData extends React.Component {\n  render() {\n    if (this.props.data.main) {\n      return React.createElement(\"div\", {\n        className: \"otherData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Temperature: \", (this.props.data.main.temp_min - 273).toFixed(2), \" \\u2103 - \", (this.props.data.main.temp_max - 273).toFixed(2), \" \\u2103\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Humidity: \", this.props.data.main.humidity, \" %\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Wind: \", this.props.data.wind.speed, \" km/hr\"));\n    } else return null;\n  }\n\n}\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.newData = this.newData.bind(this);\n    this.getMyLocation = this.getMyLocation.bind(this);\n    this.getMyLocation();\n  }\n\n  getMyLocation() {\n    this.props.getMyLocation();\n  }\n\n  fetchDataByZip(zipCode, countryCode) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(wdata => {\n      this.newData(wdata);\n    });\n  }\n\n  newData(data) {\n    this.props.newData(data);\n  }\n\n  fetchDataByGeo(latitude, longitude) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(wdata => {\n      this.newData(wdata);\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.zipCode && this.props.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (this.props.latitude !== null && this.props.longitude !== null) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  render() {\n    //  const data = this.props.data;\n    // while(!data) {\n    //     return(\n    //       <div className=\"loader\">\n    //         <div class=\"lds-hourglass\"></div>\n    //       </div>\n    //     );\n    // }\n    return null; // else return null;\n  }\n\n}\n\nlet location, latitude, longitude;\n\nclass WeatherApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMyLocation = () => {\n      if (window.navigator && window.navigator.geolocation) {\n        location = window.navigator.geolocation;\n      }\n\n      if (location) {\n        location.getCurrentPosition(function (position) {\n          latitude = position.coords.latitude;\n          longitude = position.coords.longitude;\n        });\n      }\n    };\n\n    this.handleSubmit = (zipCode, countryCode) => {\n      this.setState({\n        zipCode: zipCode,\n        countryCode: countryCode\n      });\n    };\n\n    this.newData = data => {\n      this.setState({\n        data: data\n      });\n    };\n\n    this.state = {\n      zipCode: \"\",\n      countryCode: \"\",\n      data: \"\"\n    };\n  }\n\n  render() {\n    // let styleText = {\n    //     backgroundImage: \"url('')\",\n    // };\n    if (this.state.data.main) {\n      let url = wallpaper(this.state.data.weather[0].id);\n      document.getElementById(\"root\").style.backgroundImage = \"url(\" + url + \")\"; // styleText = {\n      //     backgroundImage: \"url(\" + url + \")\",\n      // };\n    }\n\n    return React.createElement(\"div\", {\n      className: \"rootContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(WeatherTitle, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"leftBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Clock, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Cloudiness, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(Temperature, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    })), React.createElement(OtherData, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(WeatherData, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      newData: this.newData,\n      data: this.state.data,\n      latitude: latitude,\n      longitude: longitude,\n      getMyLocation: this.getMyLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(WeatherApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 225\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/index.js"],"names":["React","ReactDOM","IconId","wallpaper","SearchBar","WeatherTitle","Clock","Cloudiness","Icon","Component","render","props","data","main","id","weather","url","Temperature","temp","toFixed","OtherData","temp_min","temp_max","humidity","wind","speed","WeatherData","constructor","newData","bind","getMyLocation","fetchDataByZip","zipCode","countryCode","fetch","then","results","json","wdata","fetchDataByGeo","latitude","longitude","componentDidMount","componentDidUpdate","prevProps","location","WeatherApp","window","navigator","geolocation","getCurrentPosition","position","coords","handleSubmit","setState","state","document","getElementById","style","backgroundImage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport IconId from './icon.js';\nimport wallpaper from './wallpaper.js';\n\n//Components\nimport SearchBar from './components/SearchBar/SearchBar.js';\nimport WeatherTitle from './components/WeatherTitle/WeatherTitle.js';\nimport Clock from './components/Clock/Clock.js';\nimport Cloudiness from './components/Cloudiness/Cloudiness.js';\n\n// class Cloudiness extends React.Component {\n//     render() {\n//         if(this.props.data.main) {\n//             let data = \"\";\n//             let arr = this.props.data.weather[0].description.split(\" \");\n//             for (let i = 0; i < arr.length; i++) {\n//                 data+=arr[i][0].toUpperCase() + arr[i].slice(1) + \" \";\n//             }\n//             return(\n//                 <div className=\"cloudiness\">\n//                     <p>{data}</p>\n//                 </div>\n//             );\n//         } else return null;\n//     }\n// }\n\nclass Icon extends React.Component {\n    render() {\n        if(this.props.data.main) {\n            const id = IconId[this.props.data.weather[0].id];\n            const url = \"http://openweathermap.org/img/wn/\" + id + \"d@2x.png\";\n            return(\n                <div className='icon'>\n                    <img src={url} alt={this.props.data.weather[0].id}/>\n                </div>\n            );\n        } else return null;\n    }\n}\n\nclass Temperature extends React.Component {\n    render() {\n        if(this.props.data.main) {\n            return(\n                <div className='temp'>\n                    <p>{(this.props.data.main.temp-273).toFixed(2)} &#8451;</p>\n                </div>\n            );\n        } else return null;\n    }\n}\n\nclass OtherData extends React.Component {\n    render() {\n        if(this.props.data.main) {\n            return(\n                <div className=\"otherData\">\n                    <p>Temperature: {(this.props.data.main.temp_min-273).toFixed(2)} &#8451; - {(this.props.data.main.temp_max-273).toFixed(2)} &#8451;</p>\n                    <p>Humidity: {this.props.data.main.humidity} %</p>\n                    <p>Wind: {this.props.data.wind.speed} km/hr</p>\n                </div>\n            );\n        } else return null;\n    }\n}\n\nclass WeatherData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.newData = this.newData.bind(this);\n        this.getMyLocation = this.getMyLocation.bind(this);\n        this.getMyLocation();\n    }\n\n    getMyLocation() {\n        this.props.getMyLocation();\n    }\n\n    fetchDataByZip(zipCode,countryCode) {\n        const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n        fetch(url)\n        .then(results => results.json())\n        .then((wdata) => {\n            this.newData(wdata);\n        });\n    }\n\n    newData(data) {\n        this.props.newData(data);\n    }\n\n    fetchDataByGeo(latitude,longitude) {\n        const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n        fetch(url)\n        .then(results => results.json())\n        .then((wdata) => {\n            this.newData(wdata);\n        });\n    }\n\n    componentDidMount() {\n        if(this.props.zipCode && this.props.countryCode){\n            this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n        }\n        if(this.props.latitude!==null && this.props.longitude!==null){\n            this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n        }\n    }\n   \n\n    componentDidUpdate(prevProps) {\n        if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n          this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n        }\n        if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n            this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n        }\n      }\n\n    render() {\n       //  const data = this.props.data;\n        // while(!data) {\n        //     return(\n        //       <div className=\"loader\">\n        //         <div class=\"lds-hourglass\"></div>\n        //       </div>\n              \n        //     );\n        // }\n        return null;\n        // else return null;\n    }\n}\n\nlet location,latitude,longitude;\n\nclass WeatherApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            zipCode: \"\",\n            countryCode: \"\",\n            data: \"\",\n        };\n    }\n\n    getMyLocation = () => {\n        if (window.navigator && window.navigator.geolocation) {\n            location = window.navigator.geolocation\n        }\n        if (location){\n            location.getCurrentPosition(function (position) {\n                latitude = (position.coords.latitude);\n                longitude = (position.coords.longitude);\n            });\n        }        \n    }\n\n    handleSubmit = (zipCode,countryCode) => {\n        this.setState({\n            zipCode: zipCode,\n            countryCode: countryCode\n        })\n    }\n\n    \n\n    newData = (data) => {\n        this.setState({\n            data: data,\n        })\n    }\n\n    render() {\n        // let styleText = {\n        //     backgroundImage: \"url('')\",\n        // };\n        if (this.state.data.main){\n            let url = wallpaper(this.state.data.weather[0].id);\n            document.getElementById(\"root\").style.backgroundImage = \"url(\"+url+\")\";\n            // styleText = {\n            //     backgroundImage: \"url(\" + url + \")\",\n            // };\n        }\n        return(\n            <div className=\"rootContainer\">\n                <div className='Container'>\n                    <SearchBar \n                        zipCode={this.state.zipCode}\n                        countryCode={this.state.countryCode}\n                        latitude={this.state.latitude}\n                        longitude={this.state.longitude}\n                        onSubmit={this.handleSubmit}\n                    />\n                    {/* <Clock /> */}\n                    <WeatherTitle zipCode={this.state.zipCode} countryCode={this.state.countryCode} data={this.state.data} />\n                    <div className='leftBlock'>\n                        <Clock data={this.state.data} />\n                        <Cloudiness data={this.state.data} />\n                        <Icon data={this.state.data} />\n                        <Temperature data={this.state.data} />\n                    </div>\n                    \n                    <OtherData data={this.state.data} />\n                    <WeatherData \n                        zipCode={this.state.zipCode} countryCode={this.state.countryCode} \n                        newData={this.newData}\n                        data={this.state.data}\n                        latitude={latitude}\n                        longitude={longitude}\n                        getMyLocation={this.getMyLocation}\n                    />\n                </div>\n            </div>\n            \n        );\n    }\n}\n\n\nReactDOM.render(\n    <WeatherApp />,\n    document.getElementById(\"root\")\n);"]},"metadata":{},"sourceType":"module"}