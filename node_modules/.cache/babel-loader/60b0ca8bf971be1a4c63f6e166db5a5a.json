{"ast":null,"code":"var _jsxFileName = \"/Users/uttamdarji/Desktop/weather/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport wallpaper from './wallpaper.js'; //Components\n\nimport SearchBar from './components/SearchBar/SearchBar.js';\nimport WeatherTitle from './components/WeatherTitle/WeatherTitle.js';\nimport Clock from './components/Clock/Clock.js';\nimport Cloudiness from './components/Cloudiness/Cloudiness.js';\nimport WeatherIcon from './components/WeatherIcon/WeatherIcon.js';\nimport Temperature from './components/Temperature/Temperature.js';\nimport OtherWeatherData from './components/OtherWeatherData/OtherWeatherData.js';\nimport WeatherData from './components/WeatherData/WeatherData.js';\nimport LocationSearchBar from './components/LocationSearchBar/LocationSearchBar.js'; //Components\n\nlet location, latitude, longitude;\n\nclass WeatherApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMyLocation = () => {\n      if (window.navigator && window.navigator.geolocation) {\n        location = window.navigator.geolocation;\n      }\n\n      if (location) {\n        location.getCurrentPosition(function (position) {\n          latitude = position.coords.latitude;\n          longitude = position.coords.longitude;\n        });\n      }\n    };\n\n    this.handleSubmit = (zipCode, countryCode) => {\n      this.setState({\n        zipCode: zipCode,\n        countryCode: countryCode\n      });\n    };\n\n    this.newData = data => {\n      this.setState({\n        data: data\n      });\n    };\n\n    this.state = {\n      zipCode: \"\",\n      countryCode: \"\",\n      data: \"\"\n    };\n  }\n\n  render() {\n    // let styleText = {\n    //     backgroundImage: \"url('')\",\n    // };\n    if (this.state.data.main) {\n      let url = wallpaper(this.state.data.weather[0].id);\n      document.getElementById(\"root\").style.backgroundImage = \"url(\" + url + \")\"; // styleText = {\n      //     backgroundImage: \"url(\" + url + \")\",\n      // };\n    }\n\n    return React.createElement(\"div\", {\n      className: \"rootContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(WeatherTitle, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"leftBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Clock, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Cloudiness, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(WeatherIcon, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Temperature, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(OtherWeatherData, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(WeatherData, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      newData: this.newData,\n      data: this.state.data,\n      latitude: latitude,\n      longitude: longitude,\n      getMyLocation: this.getMyLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(WeatherApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/index.js"],"names":["React","ReactDOM","wallpaper","SearchBar","WeatherTitle","Clock","Cloudiness","WeatherIcon","Temperature","OtherWeatherData","WeatherData","LocationSearchBar","location","latitude","longitude","WeatherApp","Component","constructor","props","getMyLocation","window","navigator","geolocation","getCurrentPosition","position","coords","handleSubmit","zipCode","countryCode","setState","newData","data","state","render","main","url","weather","id","document","getElementById","style","backgroundImage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport wallpaper from './wallpaper.js';\n\n//Components\nimport SearchBar from './components/SearchBar/SearchBar.js';\nimport WeatherTitle from './components/WeatherTitle/WeatherTitle.js';\nimport Clock from './components/Clock/Clock.js';\nimport Cloudiness from './components/Cloudiness/Cloudiness.js';\nimport WeatherIcon from './components/WeatherIcon/WeatherIcon.js';\nimport Temperature from './components/Temperature/Temperature.js';\nimport OtherWeatherData from './components/OtherWeatherData/OtherWeatherData.js';\nimport WeatherData from './components/WeatherData/WeatherData.js';\nimport LocationSearchBar from './components/LocationSearchBar/LocationSearchBar.js';\n//Components\n\n\nlet location,latitude,longitude;\n\nclass WeatherApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zipCode: \"\",\n      countryCode: \"\",\n      data: \"\",\n    };\n  }\n\n  getMyLocation = () => {\n    if (window.navigator && window.navigator.geolocation) {\n      location = window.navigator.geolocation\n    }\n    if (location){\n      location.getCurrentPosition(function (position) {\n        latitude = (position.coords.latitude);\n        longitude = (position.coords.longitude);\n      });\n    }        \n  }\n\n  handleSubmit = (zipCode,countryCode) => {\n    this.setState({\n      zipCode: zipCode,\n      countryCode: countryCode\n    })\n  }\n\n  newData = (data) => {\n    this.setState({\n      data: data,\n    })\n  }\n\n  render() {\n    // let styleText = {\n    //     backgroundImage: \"url('')\",\n    // };\n    if (this.state.data.main){\n      let url = wallpaper(this.state.data.weather[0].id);\n      document.getElementById(\"root\").style.backgroundImage = \"url(\"+url+\")\";\n      // styleText = {\n      //     backgroundImage: \"url(\" + url + \")\",\n      // };\n    }\n    return(\n      <div className=\"rootContainer\">\n        <div className='Container'>\n          \n          <SearchBar \n            zipCode={this.state.zipCode}\n            countryCode={this.state.countryCode}\n            latitude={this.state.latitude}\n            longitude={this.state.longitude}\n            onSubmit={this.handleSubmit}\n          />\n\n          <WeatherTitle zipCode={this.state.zipCode} countryCode={this.state.countryCode} data={this.state.data} />\n\n          <div className='leftBlock'>\n            <Clock data={this.state.data} />\n\n            <Cloudiness data={this.state.data} />\n\n            <WeatherIcon data={this.state.data} />\n\n            <Temperature data={this.state.data} />\n          </div>\n        \n          <OtherWeatherData data={this.state.data} />\n\n          <WeatherData \n            zipCode={this.state.zipCode} countryCode={this.state.countryCode} \n            newData={this.newData}\n            data={this.state.data}\n            latitude={latitude}\n            longitude={longitude}\n            getMyLocation={this.getMyLocation}\n          />\n\n        </div>\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(\n    <WeatherApp />,\n    document.getElementById(\"root\")\n);"]},"metadata":{},"sourceType":"module"}