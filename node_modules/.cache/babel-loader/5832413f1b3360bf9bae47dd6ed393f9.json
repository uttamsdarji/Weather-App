{"ast":null,"code":"var _jsxFileName = \"/Users/uttamdarji/Desktop/weather/src/components/OtherWeatherData.js\";\nimport React from 'react';\n\nclass OtherWeatherData extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getSunsetSunRise = timestamp => {\n      let date = new Date(timestamp * 1000);\n      let time = date.getTime();\n      let localOffset = date.getTimezoneOffset() * 60000;\n      let utc = time + localOffset;\n      let nd = new Date(utc + 1000 * this.props.data.timezone);\n      return nd;\n    };\n\n    this.formatTime = date => {\n      let hours = date.getHours();\n      let minutes = date.getMinutes(); //let seconds = date.getSeconds();\n\n      if (minutes < 10) {\n        minutes = '0' + minutes;\n      }\n\n      let ampm = 'am';\n\n      if (hours > 12) {\n        hours = hours - 12;\n        ampm = 'pm';\n      } else if (hours === 0) {\n        hours = 12;\n        ampm = 'am';\n      } else if (hours === 12) {\n        ampm = 'pm';\n      }\n\n      return hours + \":\" + minutes + \" \" + ampm;\n    };\n  }\n\n  render() {\n    if (this.props.data.main) {\n      let Sunrise = new Date(this.props.data.sys.sunrise * 1000);\n      let Sunset = new Date(this.props.data.sys.sunset * 1000);\n      return React.createElement(\"div\", {\n        className: \"otherWeatherData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"windSpeed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.props.data.wind.speed, \" m/s\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Wind\")), React.createElement(\"div\", {\n        className: \"weatherInfoContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, (this.props.data.visibility / 1609.344).toFixed(2), \" MI\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Visibility\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.props.data.main.pressure), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Pressure\")), React.createElement(\"div\", {\n        className: \"right_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.data.main.humidity, \" %\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Humidity\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, Sunrise.getHours()), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Sunrise\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, Sunset.getHours()), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Sunset\"))));\n    } else return null;\n  }\n\n}\n\nexport default OtherWeatherData;","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/components/OtherWeatherData.js"],"names":["React","OtherWeatherData","Component","getSunsetSunRise","timestamp","date","Date","time","getTime","localOffset","getTimezoneOffset","utc","nd","props","data","timezone","formatTime","hours","getHours","minutes","getMinutes","ampm","render","main","Sunrise","sys","sunrise","Sunset","sunset","wind","speed","visibility","toFixed","pressure","humidity"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass OtherWeatherData extends React.Component {\n  getSunsetSunRise = (timestamp) => {\n    let date = new Date(timestamp*1000);\n    let time = date.getTime();\n    let localOffset = date.getTimezoneOffset() * 60000;\n    let utc = time + localOffset;\n    let nd = new Date(utc + (1000*this.props.data.timezone));\n    return nd;\n  }\n\n  formatTime = (date) => {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    //let seconds = date.getSeconds();\n    if (minutes < 10) {\n        minutes = '0' + minutes;\n    }\n    let ampm = 'am';\n    if (hours > 12) {\n        hours = hours - 12;\n        ampm = 'pm';\n    } else if (hours === 0) {\n        hours = 12;\n        ampm = 'am'\n    } else if (hours === 12) {\n        ampm = 'pm'\n    }\n    return hours + \":\" + minutes + \" \" + ampm;\n  }\n\n  render() {\n    if(this.props.data.main) {\n      let Sunrise = new Date(this.props.data.sys.sunrise*1000);\n      let Sunset = new Date(this.props.data.sys.sunset*1000);\n      return(\n        <div className=\"otherWeatherData\">\n          <div className=\"windSpeed\">\n            <h1>{this.props.data.wind.speed} m/s</h1>\n            <h2>Wind</h2>\n          </div>\n          <div className=\"weatherInfoContainer\">\n            <div className=\"left_block\">\n              <h1>{(this.props.data.visibility/1609.344).toFixed(2)} MI</h1>\n              <h2>Visibility</h2>\n              <br/>\n              <h1>{this.props.data.main.pressure}</h1>\n              <h2>Pressure</h2>\n            </div>\n            <div className=\"right_block\">\n              <h1>{this.props.data.main.humidity} %</h1>\n              <h2>Humidity</h2>\n              <br/>\n              <h1>{Sunrise.getHours()}</h1>\n              <h2>Sunrise</h2>\n              <br/>\n              <h1>{Sunset.getHours()}</h1>\n              <h2>Sunset</h2>\n            </div>\n          </div>\n        </div>\n      );\n    } else return null;\n  }\n}\n\nexport default OtherWeatherData;"]},"metadata":{},"sourceType":"module"}