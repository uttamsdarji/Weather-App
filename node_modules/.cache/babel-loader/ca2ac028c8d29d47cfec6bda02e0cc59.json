{"ast":null,"code":"var _jsxFileName = \"/Users/uttamdarji/Desktop/weather/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    this.props.onSubmit(e.target[0].value, e.target[1].value);\n    e.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Zip Code\",\n      ref: \"zip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Country Code\",\n      ref: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass WeatherTitle extends React.Component {\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Weather in \", this.props.zipCode, \",\", this.props.countryCode);\n  }\n\n}\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props); //this.data = {};\n\n    this.newData = this.newData.bind(this);\n    this.getMyLocation = this.getMyLocation.bind(this); //while(this.props.latitude===\"\") {this.getMyLocation()}\n  }\n\n  getMyLocation() {\n    this.props.getMyLocation();\n  }\n\n  fetchDataByZip(zipCode, countryCode) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(wdata => {\n      this.newData(wdata);\n    });\n  }\n\n  newData(data) {\n    this.props.newData(data);\n  }\n\n  fetchDataByGeo(latitude, longitude) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(wdata => {\n      this.newData(wdata);\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.zipCode && this.props.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (!this.props.latitude) {\n      this.getMyLocation();\n    } // if(this.props.latitude!==\"\" && this.props.longitude!==\"\"){\n    //     this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n    // }\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  render() {\n    const data = this.props.data;\n\n    if (data) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, data.name);\n    } else return null;\n  }\n\n}\n\nclass WeatherApp extends React.Component {\n  constructor(props) {\n    super(props); //this.getMyLocation();\n\n    this.state = {\n      zipCode: \"\",\n      countryCode: \"\",\n      data: \"\",\n      latitude: \"\",\n      longitude: \"\"\n    };\n    this.newData = this.newData.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getMyLocation = this.getMyLocation.bind(this);\n  }\n\n  getMyLocation() {\n    if (window.navigator && window.navigator.geolocation) {\n      geolocation.location = window.navigator.geolocation;\n    }\n\n    if (geolocation.location) {\n      geolocation.location.getCurrentPosition(function (position) {\n        geolocation.latitude = Math.round(position.coords.latitude);\n        geolocation.longitude = Math.round(position.coords.longitude);\n        console.log(geolocation.latitude);\n        console.log(geolocation.longitude);\n      });\n    }\n\n    this.setState({\n      latitude: geolocation.latitude,\n      longitude: geolocation.longitude\n    });\n    console.log(geolocation.latitude);\n    console.log(geolocation.longitude);\n  }\n\n  handleSubmit(zipCode, countryCode) {\n    this.setState({\n      zipCode: zipCode,\n      countryCode: countryCode\n    });\n  }\n\n  newData(data) {\n    this.setState({\n      data: data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(WeatherTitle, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(WeatherData, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      newData: this.newData,\n      data: this.state.data,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      getMyLocation: this.getMyLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet geolocation = {\n  location: null,\n  latitude: null,\n  longitude: null // return ({\n  //     latitude: geolocation.latitude,\n  //     longitude: geolocation.longitude,\n  // });\n\n};\nReactDOM.render( //<SearchBar />,\nReact.createElement(WeatherApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 197\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/index.js"],"names":["React","ReactDOM","SearchBar","Component","constructor","props","handleSubmit","bind","e","onSubmit","target","value","preventDefault","render","WeatherTitle","zipCode","countryCode","WeatherData","newData","getMyLocation","fetchDataByZip","url","fetch","then","results","json","wdata","data","fetchDataByGeo","latitude","longitude","componentDidMount","componentDidUpdate","prevProps","name","WeatherApp","state","window","navigator","geolocation","location","getCurrentPosition","position","Math","round","coords","console","log","setState","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleSubmit(e) {\n        this.props.onSubmit(e.target[0].value,e.target[1].value);\n        e.preventDefault();\n    }\n\n    render() {\n        return(\n            <div className=\"search\">\n                <form  onSubmit={this.handleSubmit}>\n                    <input type=\"text\" placeholder=\"Zip Code\" ref=\"zip\"/>\n                    <input type=\"text\" placeholder=\"Country Code\" ref=\"country\" />\n                    <input type=\"submit\" value=\"Search\" />\n                </form>\n            </div>\n        );\n    }\n}\n\nclass  WeatherTitle extends React.Component {\n    render() {\n        return (\n            <h1>Weather in {this.props.zipCode},{this.props.countryCode}</h1>\n        );\n    }\n}\n\nclass WeatherData extends React.Component {\n    constructor(props) {\n        super(props);\n        //this.data = {};\n        this.newData = this.newData.bind(this);\n        this.getMyLocation = this.getMyLocation.bind(this);\n        //while(this.props.latitude===\"\") {this.getMyLocation()}\n    }\n\n    getMyLocation() {\n        this.props.getMyLocation();\n    }\n\n    fetchDataByZip(zipCode,countryCode) {\n        const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n        fetch(url)\n        .then(results => results.json())\n        .then((wdata) => {\n            this.newData(wdata);\n        });\n    }\n\n    newData(data) {\n        this.props.newData(data);\n    }\n\n    fetchDataByGeo(latitude,longitude) {\n        const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n        fetch(url)\n        .then(results => results.json())\n        .then((wdata) => {\n            this.newData(wdata);\n        });\n    }\n\n    componentDidMount() {\n        if(this.props.zipCode && this.props.countryCode){\n            this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n        }\n        if(!this.props.latitude) {\n            this.getMyLocation();\n        }\n        // if(this.props.latitude!==\"\" && this.props.longitude!==\"\"){\n        //     this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n        // }\n    }\n   \n\n    componentDidUpdate(prevProps) {\n        if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n          this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n        }\n        if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n            this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n        }\n      }\n\n    render() {\n        const data = this.props.data;\n        if(data) {\n            return(\n                <h1>{data.name}</h1>\n            );\n        } else return null;\n    }\n}\n\nclass WeatherApp extends React.Component {\n    constructor(props) {\n        super(props);\n        //this.getMyLocation();\n        \n        this.state = {\n            zipCode: \"\",\n            countryCode: \"\",\n            data: \"\",\n            latitude: \"\",\n            longitude: \"\",\n        };\n        this.newData = this.newData.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.getMyLocation = this.getMyLocation.bind(this);\n    }\n    getMyLocation() {\n        if (window.navigator && window.navigator.geolocation) {\n            geolocation.location = window.navigator.geolocation\n        }\n        if (geolocation.location){\n            geolocation.location.getCurrentPosition(function (position) {\n                geolocation.latitude = Math.round(position.coords.latitude);\n                geolocation.longitude= Math.round(position.coords.longitude);\n                console.log(geolocation.latitude);\n                console.log(geolocation.longitude);\n            })\n        }\n        this.setState({\n            latitude: geolocation.latitude,\n            longitude: geolocation.longitude,\n        });\n        console.log(geolocation.latitude);\n                console.log(geolocation.longitude);\n        \n    }\n\n    handleSubmit(zipCode,countryCode) {\n        this.setState({\n            zipCode: zipCode,\n            countryCode: countryCode\n        })\n    }\n    \n\n    newData(data) {\n        this.setState({\n            data: data,\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <SearchBar \n                    zipCode={this.state.zipCode}\n                    countryCode={this.state.countryCode}\n                    latitude={this.state.latitude}\n                    longitude={this.state.longitude}\n                    onSubmit={this.handleSubmit}\n                />\n                {/* <Clock /> */}\n                <WeatherTitle zipCode={this.state.zipCode} countryCode={this.state.countryCode} />\n                <WeatherData \n                    zipCode={this.state.zipCode} countryCode={this.state.countryCode} \n                    newData={this.newData}\n                    data={this.state.data}\n                    latitude={this.state.latitude}\n                    longitude={this.state.longitude}\n                    getMyLocation={this.getMyLocation}\n                />\n            </div>\n            \n        );\n    }\n}\nlet geolocation={\n    location: null,\n    latitude: null,\n    longitude: null,\n}\n\n\n    // return ({\n    //     latitude: geolocation.latitude,\n    //     longitude: geolocation.longitude,\n    // });\n\n\n\nReactDOM.render(\n    //<SearchBar />,\n    <WeatherApp />,\n    document.getElementById(\"root\")\n);"]},"metadata":{},"sourceType":"module"}