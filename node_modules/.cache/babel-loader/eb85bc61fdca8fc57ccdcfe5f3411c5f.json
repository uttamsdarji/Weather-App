{"ast":null,"code":"var _jsxFileName = \"/Users/uttamdarji/Desktop/weather/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props); // this.handleZipChange = this.handleZipChange.bind(this);\n    // this.handleCountryChange = this.handleCountryChange.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // handleZipChange(e) {\n  //     this.props.onZipChange(e.target.value);\n  // }\n  // handleCountryChange(e) {\n  //     this.props.onCountryChange(e.target.value);\n  // }\n\n\n  handleSubmit(e) {\n    this.props.onSubmit(e.zip, e.country);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Zip Code\",\n      value: this.props.zipCode,\n      ref: \"zip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Country Code\",\n      value: this.props.countryCode,\n      ref: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Search\")));\n  }\n\n}\n\nclass WeatherTitle extends React.Component {\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Weather in \", this.props.zipCode, \",\", this.props.countryCode);\n  }\n\n}\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props); //this.data = {};\n\n    this.newData = this.newData.bind(this);\n  }\n\n  fetchDataByZip(zipCode, countryCode) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(wdata => {\n      this.newData(wdata);\n    });\n  }\n\n  newData(data) {\n    this.props.newData(data);\n  }\n\n  fetchDataByGeo(latitude, longitude) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(wdata => {\n      this.newData(wdata);\n    });\n  } // componentDidMount() {\n  //     // const latitude = geolocation.latitude;\n  //     // const longitude = geolocation.longitude;\n  //     // if (latitude!== null){\n  //     //     this.data = this.fetchDataByGeo(latitude,longitude);\n  //     // }\n  //     this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n  // }\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  render() {\n    const data = this.props.data;\n\n    if (data) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, data.id);\n    } else return null; // return null;\n\n  }\n\n} // let geolocation = {\n//     location: null,\n//     latitude: null,\n//     longitude: null,\n// }\n\n\nclass WeatherApp extends React.Component {\n  constructor(props) {\n    super(props); //this.getMyLocation();\n\n    this.state = {\n      zipCode: \"\",\n      countryCode: \"\",\n      data: \"\" // latitude: this.getMyLocation().latitude,\n      // longitude: this.getMyLocation().longitude,\n\n    }; // console.log(this.state.latitude);\n    // console.log(this.state.longitude);\n    // this.handleZipChange = this.handleZipChange.bind(this);\n    // this.handleCountryChange = this.handleCountryChange.bind(this);\n\n    this.newData = this.newData.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(zipCode, countryCode) {\n    this.setState({\n      zipCode: zipCode,\n      countryCode: countryCode\n    });\n  } // getMyLocation = (e) => {\n  //     let location = null;\n  //     let latitude = null;\n  //     let longitude = null;\n  //     // if (geolocation.location == null) {\n  //         if (window.navigator && window.navigator.geolocation) {\n  //             location = window.navigator.geolocation\n  //         }\n  //         if (location){\n  //             location.getCurrentPosition(function (position) {\n  //                 latitude = Math.round(position.coords.latitude);\n  //                 longitude= Math.round(position.coords.longitude);\n  //                 console.log(latitude);\n  //                 console.log(longitude);\n  //                 // this.setState({\n  //                 //     latitude: Math.round(position.coords.latitude),\n  //                 //     longitude: Math.round(position.coords.longitude),\n  //                 // });\n  //             })\n  //         }\n  //         return ({\n  //             latitude: latitude,\n  //             longitude: longitude,\n  //         });\n  //     // }\n  // }\n\n\n  newData(data) {\n    this.setState({\n      data: data\n    });\n  } // handleZipChange(zipCode) {\n  //     this.setState({\n  //       zipCode: zipCode,  \n  //     })\n  // }\n  // handleCountryChange(countryCode) {\n  //     this.setState({\n  //       countryCode: countryCode,  \n  //     })\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode // latitude={this.state.latitude}\n      // longitude={this.state.longitude}\n      // onZipChange={this.handleZipChange}\n      // onCountryChange={this.handleCountryChange}\n      ,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(WeatherTitle, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(WeatherData, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      newData: this.newData,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render( //<SearchBar />,\nReact.createElement(WeatherApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 210\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/index.js"],"names":["React","ReactDOM","SearchBar","Component","constructor","props","handleSubmit","bind","e","onSubmit","zip","country","render","zipCode","countryCode","WeatherTitle","WeatherData","newData","fetchDataByZip","url","fetch","then","results","json","wdata","data","fetchDataByGeo","latitude","longitude","componentDidUpdate","prevProps","id","WeatherApp","state","setState","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.handleZipChange = this.handleZipChange.bind(this);\n        // this.handleCountryChange = this.handleCountryChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    // handleZipChange(e) {\n    //     this.props.onZipChange(e.target.value);\n    // }\n\n    // handleCountryChange(e) {\n    //     this.props.onCountryChange(e.target.value);\n    // }\n\n    handleSubmit(e) {\n        this.props.onSubmit(e.zip,e.country);\n    }\n\n    render() {\n        return(\n            <div className=\"search\">\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" placeholder=\"Zip Code\" value={this.props.zipCode} ref=\"zip\"/>\n                    <input type=\"text\" placeholder=\"Country Code\" value={this.props.countryCode} ref=\"country\" />\n                    <input type=\"submit\">Search</input>\n                </form>\n            </div>\n        );\n    }\n}\n\nclass  WeatherTitle extends React.Component {\n    render() {\n        return (\n            <h1>Weather in {this.props.zipCode},{this.props.countryCode}</h1>\n        );\n    }\n}\n\nclass WeatherData extends React.Component {\n    constructor(props) {\n        super(props);\n        //this.data = {};\n        this.newData = this.newData.bind(this);\n    }\n    fetchDataByZip(zipCode,countryCode) {\n        const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n        fetch(url)\n        .then(results => results.json())\n        .then((wdata) => {\n            this.newData(wdata);\n        });\n    }\n\n    newData(data) {\n        this.props.newData(data);\n    }\n\n    fetchDataByGeo(latitude,longitude) {\n        const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n        fetch(url)\n        .then(results => results.json())\n        .then((wdata) => {\n            this.newData(wdata);\n        });\n    }\n\n    // componentDidMount() {\n    //     // const latitude = geolocation.latitude;\n    //     // const longitude = geolocation.longitude;\n    //     // if (latitude!== null){\n    //     //     this.data = this.fetchDataByGeo(latitude,longitude);\n    //     // }\n    //     this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n    // }\n   \n\n    componentDidUpdate(prevProps) {\n        if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n          this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n        }\n        if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n           this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n        }\n      }\n\n    render() {\n        const data = this.props.data;\n        if(data) {\n            return(\n                <h1>{data.id}</h1>\n            );\n        } else return null;\n        // return null;\n    }\n}\n\n// let geolocation = {\n//     location: null,\n//     latitude: null,\n//     longitude: null,\n// }\n\nclass WeatherApp extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        //this.getMyLocation();\n        this.state = {\n            zipCode: \"\",\n            countryCode: \"\",\n            data: \"\",\n            // latitude: this.getMyLocation().latitude,\n            // longitude: this.getMyLocation().longitude,\n        };\n        // console.log(this.state.latitude);\n        // console.log(this.state.longitude);\n        // this.handleZipChange = this.handleZipChange.bind(this);\n        // this.handleCountryChange = this.handleCountryChange.bind(this);\n        this.newData = this.newData.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(zipCode,countryCode) {\n        this.setState({\n            zipCode: zipCode,\n            countryCode: countryCode\n        })\n    }\n    // getMyLocation = (e) => {\n    //     let location = null;\n    //     let latitude = null;\n    //     let longitude = null;\n    //     // if (geolocation.location == null) {\n    //         if (window.navigator && window.navigator.geolocation) {\n    //             location = window.navigator.geolocation\n    //         }\n    //         if (location){\n    //             location.getCurrentPosition(function (position) {\n    //                 latitude = Math.round(position.coords.latitude);\n    //                 longitude= Math.round(position.coords.longitude);\n    //                 console.log(latitude);\n    //                 console.log(longitude);\n    //                 // this.setState({\n    //                 //     latitude: Math.round(position.coords.latitude),\n    //                 //     longitude: Math.round(position.coords.longitude),\n    //                 // });\n    //             })\n    //         }\n    //         return ({\n    //             latitude: latitude,\n    //             longitude: longitude,\n    //         });\n    //     // }\n        \n    // }\n\n    newData(data) {\n        this.setState({\n            data: data,\n        })\n    }\n\n    // handleZipChange(zipCode) {\n    //     this.setState({\n    //       zipCode: zipCode,  \n    //     })\n    // }\n\n    // handleCountryChange(countryCode) {\n    //     this.setState({\n    //       countryCode: countryCode,  \n    //     })\n    // }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <SearchBar \n                    zipCode={this.state.zipCode}\n                    countryCode={this.state.countryCode}\n                    // latitude={this.state.latitude}\n                    // longitude={this.state.longitude}\n                    // onZipChange={this.handleZipChange}\n                    // onCountryChange={this.handleCountryChange}\n                    onSubmit={this.handleSubmit}\n                />\n                {/* <Clock /> */}\n                <WeatherTitle zipCode={this.state.zipCode} countryCode={this.state.countryCode} />\n                <WeatherData \n                    zipCode={this.state.zipCode} countryCode={this.state.countryCode} \n                    newData={this.newData}\n                    data={this.state.data}\n                />\n            </div>\n            \n        );\n    }\n}\n\n\nReactDOM.render(\n    //<SearchBar />,\n    <WeatherApp />,\n    document.getElementById(\"root\")\n);"]},"metadata":{},"sourceType":"module"}