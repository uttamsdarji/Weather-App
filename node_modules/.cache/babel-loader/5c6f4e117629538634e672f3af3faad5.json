{"ast":null,"code":"var _jsxFileName = \"/Users/uttamdarji/Desktop/weather/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport IconId from './icon.js';\nimport wallpaper from './wallpaper.js';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    this.props.onSubmit(e.target[0].value, e.target[1].value);\n    e.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Zip Code\",\n      ref: \"zip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Country Code\",\n      ref: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass WeatherTitle extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"weatherTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.data.main && React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.data.name, \", \", this.props.data.sys.country));\n  }\n\n}\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tick = () => {\n      this.setState({\n        date: new Date()\n      });\n    };\n\n    this.getTime = offset => {\n      let d = new Date();\n      let localTime = d.getTime();\n      let localOffset = d.getTimezoneOffset() * 60000; // obtain UTC time in msec\n\n      let utc = localTime + localOffset; // create new Date object for different city\n      // using supplied offset\n\n      let nd = new Date(utc + 3600000 * offset);\n      return nd; //nd = 3600000 + nd;\n      //utc = new Date(utc);\n      // return time as a string\n      // $(\"#local\").html(nd.toLocaleString());\n      // $(\"#utc\").html(utc.toLocaleString());\n    };\n\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  render() {\n    let hours = this.state.date.getHours();\n    let minutes = this.state.date.getMinutes();\n    let seconds = this.state.date.getSeconds();\n\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n\n    let ampm = 'am';\n\n    if (hours > 12) {\n      hours = hours - 12;\n      ampm = 'pm';\n    } else if (hours === 0) {\n      hours = 12;\n      ampm = 'am';\n    } else if (hours === 12) {\n      ampm = 'pm';\n    }\n\n    if (this.props.data.main) {\n      return React.createElement(\"div\", {\n        className: \"clock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, hours, \":\", minutes, \":\", seconds, \" \", ampm));\n    } else return null;\n  }\n\n}\n\nclass Cloudiness extends React.Component {\n  render() {\n    if (this.props.data.main) {\n      let data = \"\";\n      let arr = this.props.data.weather[0].description.split(\" \");\n\n      for (let i = 0; i < arr.length; i++) {\n        data += arr[i][0].toUpperCase() + arr[i].slice(1) + \" \";\n      }\n\n      return React.createElement(\"div\", {\n        className: \"cloudiness\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, data));\n    } else return null;\n  }\n\n}\n\nclass Icon extends React.Component {\n  render() {\n    if (this.props.data.main) {\n      const id = IconId[this.props.data.weather[0].id];\n      const url = \"http://openweathermap.org/img/wn/\" + id + \"d@2x.png\";\n      return React.createElement(\"div\", {\n        className: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: url,\n        alt: this.props.data.weather[0].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }));\n    } else return null;\n  }\n\n}\n\nclass Temperature extends React.Component {\n  render() {\n    if (this.props.data.main) {\n      return React.createElement(\"div\", {\n        className: \"temp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, (this.props.data.main.temp - 273).toFixed(2), \" \\u2103\"));\n    } else return null;\n  }\n\n}\n\nclass OtherData extends React.Component {\n  render() {\n    if (this.props.data.main) {\n      return React.createElement(\"div\", {\n        className: \"otherData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Temperature: \", (this.props.data.main.temp_min - 273).toFixed(2), \" \\u2103 - \", (this.props.data.main.temp_max - 273).toFixed(2), \" \\u2103\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Humidity: \", this.props.data.main.humidity, \" %\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Wind: \", this.props.data.wind.speed, \" km/hr\"));\n    } else return null;\n  }\n\n}\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.newData = this.newData.bind(this);\n    this.getMyLocation = this.getMyLocation.bind(this);\n    this.getMyLocation();\n  }\n\n  getMyLocation() {\n    this.props.getMyLocation();\n  }\n\n  fetchDataByZip(zipCode, countryCode) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(wdata => {\n      this.newData(wdata);\n    });\n  }\n\n  newData(data) {\n    this.props.newData(data);\n  }\n\n  fetchDataByGeo(latitude, longitude) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(wdata => {\n      this.newData(wdata);\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.zipCode && this.props.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (this.props.latitude !== null && this.props.longitude !== null) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  render() {\n    //  const data = this.props.data;\n    // while(!data) {\n    //     return(\n    //       <div className=\"loader\">\n    //         <div class=\"lds-hourglass\"></div>\n    //       </div>\n    //     );\n    // }\n    return null; // else return null;\n  }\n\n}\n\nlet location, latitude, longitude;\n\nclass WeatherApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMyLocation = () => {\n      if (window.navigator && window.navigator.geolocation) {\n        location = window.navigator.geolocation;\n      }\n\n      if (location) {\n        location.getCurrentPosition(function (position) {\n          latitude = position.coords.latitude;\n          longitude = position.coords.longitude;\n        });\n      }\n    };\n\n    this.handleSubmit = (zipCode, countryCode) => {\n      this.setState({\n        zipCode: zipCode,\n        countryCode: countryCode\n      });\n    };\n\n    this.newData = data => {\n      this.setState({\n        data: data\n      });\n    };\n\n    this.state = {\n      zipCode: \"\",\n      countryCode: \"\",\n      data: \"\"\n    };\n  }\n\n  render() {\n    // let styleText = {\n    //     backgroundImage: \"url('')\",\n    // };\n    if (this.state.data.main) {\n      let url = wallpaper(this.state.data.weather[0].id);\n      document.getElementById(\"root\").style.backgroundImage = \"url(\" + url + \")\"; // styleText = {\n      //     backgroundImage: \"url(\" + url + \")\",\n      // };\n    }\n\n    return React.createElement(\"div\", {\n      className: \"rootContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(WeatherTitle, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"leftBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(Clock, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(Cloudiness, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(Temperature, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    })), React.createElement(OtherData, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), React.createElement(WeatherData, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      newData: this.newData,\n      data: this.state.data,\n      latitude: latitude,\n      longitude: longitude,\n      getMyLocation: this.getMyLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(WeatherApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 321\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/index.js"],"names":["React","ReactDOM","IconId","wallpaper","SearchBar","Component","constructor","props","handleSubmit","bind","e","onSubmit","target","value","preventDefault","render","WeatherTitle","data","main","name","sys","country","Clock","tick","setState","date","Date","getTime","offset","d","localTime","localOffset","getTimezoneOffset","utc","nd","state","componentDidMount","timerID","setInterval","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","Cloudiness","arr","weather","description","split","i","length","toUpperCase","slice","Icon","id","url","Temperature","temp","toFixed","OtherData","temp_min","temp_max","humidity","wind","speed","WeatherData","newData","getMyLocation","fetchDataByZip","zipCode","countryCode","fetch","then","results","json","wdata","fetchDataByGeo","latitude","longitude","componentDidUpdate","prevProps","location","WeatherApp","window","navigator","geolocation","getCurrentPosition","position","coords","document","getElementById","style","backgroundImage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport IconId from './icon.js';\nimport wallpaper from './wallpaper.js';\n\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleSubmit(e) {\n        this.props.onSubmit(e.target[0].value,e.target[1].value);\n        e.preventDefault();\n    }\n\n    render() {\n        return(\n            <div className=\"search\">\n                <form  onSubmit={this.handleSubmit}>\n                    <input type=\"text\" placeholder=\"Zip Code\" ref=\"zip\"/>\n                    <input type=\"text\" placeholder=\"Country Code\" ref=\"country\" />\n                    <input type=\"submit\" value=\"Search\" />\n                </form>\n            </div>\n        );\n    }\n}\n\nclass  WeatherTitle extends React.Component {\n  render() {\n      return (\n          <div className=\"weatherTitle\">\n          {this.props.data.main &&\n            <h1>{this.props.data.name}, {this.props.data.sys.country}</h1>\n          }\n          </div>\n      )\n  }\n}\n\nclass Clock extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        date: new Date(),\n      };\n    }\n    componentDidMount() {\n        this.timerID = setInterval(\n          () => this.tick(),\n          1000\n        );\n      }\n    tick = () => {\n      this.setState({\n        date: new Date(),\n      });\n    }\n\n    getTime = (offset) =>\n        {\n            let d = new Date();\n            let localTime = d.getTime();\n            let localOffset = d.getTimezoneOffset() * 60000;\n\n            // obtain UTC time in msec\n            let utc = localTime + localOffset;\n            // create new Date object for different city\n            // using supplied offset\n            let nd = new Date(utc + (3600000*offset));\n            return nd;\n            //nd = 3600000 + nd;\n            //utc = new Date(utc);\n            // return time as a string\n            // $(\"#local\").html(nd.toLocaleString());\n            // $(\"#utc\").html(utc.toLocaleString());\n        };\n\n    render() {\n        let hours = this.state.date.getHours();\n        let minutes = this.state.date.getMinutes();\n        let seconds = this.state.date.getSeconds();\n        if (minutes < 10) {\n            minutes = '0' + minutes;\n        }\n        let ampm = 'am';\n        if (hours > 12) {\n            hours = hours - 12;\n            ampm = 'pm';\n        } else if (hours === 0) {\n            hours = 12;\n            ampm = 'am'\n        } else if (hours === 12) {\n            ampm = 'pm'\n        }\n        if(this.props.data.main) {\n            return (\n                <div className=\"clock\">\n                    <h2>{hours}:{minutes}:{seconds} {ampm}</h2>\n                </div>\n            );\n        } else return null;\n    }\n}\n\nclass Cloudiness extends React.Component {\n    render() {\n        if(this.props.data.main) {\n            let data = \"\";\n            let arr = this.props.data.weather[0].description.split(\" \");\n            for (let i = 0; i < arr.length; i++) {\n                data+=arr[i][0].toUpperCase() + arr[i].slice(1) + \" \";\n            }\n            return(\n                <div className=\"cloudiness\">\n                    <p>{data}</p>\n                </div>\n            );\n        } else return null;\n    }\n}\n\nclass Icon extends React.Component {\n    render() {\n        if(this.props.data.main) {\n            const id = IconId[this.props.data.weather[0].id];\n            const url = \"http://openweathermap.org/img/wn/\" + id + \"d@2x.png\";\n            return(\n                <div className='icon'>\n                    <img src={url} alt={this.props.data.weather[0].id}/>\n                </div>\n            );\n        } else return null;\n    }\n}\n\nclass Temperature extends React.Component {\n    render() {\n        if(this.props.data.main) {\n            return(\n                <div className='temp'>\n                    <p>{(this.props.data.main.temp-273).toFixed(2)} &#8451;</p>\n                </div>\n            );\n        } else return null;\n    }\n}\n\nclass OtherData extends React.Component {\n    render() {\n        if(this.props.data.main) {\n            return(\n                <div className=\"otherData\">\n                    <p>Temperature: {(this.props.data.main.temp_min-273).toFixed(2)} &#8451; - {(this.props.data.main.temp_max-273).toFixed(2)} &#8451;</p>\n                    <p>Humidity: {this.props.data.main.humidity} %</p>\n                    <p>Wind: {this.props.data.wind.speed} km/hr</p>\n                </div>\n            );\n        } else return null;\n    }\n}\n\nclass WeatherData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.newData = this.newData.bind(this);\n        this.getMyLocation = this.getMyLocation.bind(this);\n        this.getMyLocation();\n    }\n\n    getMyLocation() {\n        this.props.getMyLocation();\n    }\n\n    fetchDataByZip(zipCode,countryCode) {\n        const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n        fetch(url)\n        .then(results => results.json())\n        .then((wdata) => {\n            this.newData(wdata);\n        });\n    }\n\n    newData(data) {\n        this.props.newData(data);\n    }\n\n    fetchDataByGeo(latitude,longitude) {\n        const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n        fetch(url)\n        .then(results => results.json())\n        .then((wdata) => {\n            this.newData(wdata);\n        });\n    }\n\n    componentDidMount() {\n        if(this.props.zipCode && this.props.countryCode){\n            this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n        }\n        if(this.props.latitude!==null && this.props.longitude!==null){\n            this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n        }\n    }\n   \n\n    componentDidUpdate(prevProps) {\n        if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n          this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n        }\n        if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n            this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n        }\n      }\n\n    render() {\n       //  const data = this.props.data;\n        // while(!data) {\n        //     return(\n        //       <div className=\"loader\">\n        //         <div class=\"lds-hourglass\"></div>\n        //       </div>\n              \n        //     );\n        // }\n        return null;\n        // else return null;\n    }\n}\n\nlet location,latitude,longitude;\n\nclass WeatherApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            zipCode: \"\",\n            countryCode: \"\",\n            data: \"\",\n        };\n    }\n\n    getMyLocation = () => {\n        if (window.navigator && window.navigator.geolocation) {\n            location = window.navigator.geolocation\n        }\n        if (location){\n            location.getCurrentPosition(function (position) {\n                latitude = (position.coords.latitude);\n                longitude = (position.coords.longitude);\n            });\n        }        \n    }\n\n    handleSubmit = (zipCode,countryCode) => {\n        this.setState({\n            zipCode: zipCode,\n            countryCode: countryCode\n        })\n    }\n\n    \n\n    newData = (data) => {\n        this.setState({\n            data: data,\n        })\n    }\n\n    render() {\n        // let styleText = {\n        //     backgroundImage: \"url('')\",\n        // };\n        if (this.state.data.main){\n            let url = wallpaper(this.state.data.weather[0].id);\n            document.getElementById(\"root\").style.backgroundImage = \"url(\"+url+\")\";\n            // styleText = {\n            //     backgroundImage: \"url(\" + url + \")\",\n            // };\n        }\n        return(\n            <div className=\"rootContainer\">\n                <div className='Container'>\n                    <SearchBar \n                        zipCode={this.state.zipCode}\n                        countryCode={this.state.countryCode}\n                        latitude={this.state.latitude}\n                        longitude={this.state.longitude}\n                        onSubmit={this.handleSubmit}\n                    />\n                    {/* <Clock /> */}\n                    <WeatherTitle zipCode={this.state.zipCode} countryCode={this.state.countryCode} data={this.state.data} />\n                    <div className='leftBlock'>\n                        <Clock data={this.state.data} />\n                        <Cloudiness data={this.state.data} />\n                        <Icon data={this.state.data} />\n                        <Temperature data={this.state.data} />\n                    </div>\n                    \n                    <OtherData data={this.state.data} />\n                    <WeatherData \n                        zipCode={this.state.zipCode} countryCode={this.state.countryCode} \n                        newData={this.newData}\n                        data={this.state.data}\n                        latitude={latitude}\n                        longitude={longitude}\n                        getMyLocation={this.getMyLocation}\n                    />\n                </div>\n            </div>\n            \n        );\n    }\n}\n\n\nReactDOM.render(\n    <WeatherApp />,\n    document.getElementById(\"root\")\n);"]},"metadata":{},"sourceType":"module"}