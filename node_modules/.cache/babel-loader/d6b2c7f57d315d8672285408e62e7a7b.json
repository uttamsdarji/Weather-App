{"ast":null,"code":"var _jsxFileName = \"/Users/uttamdarji/Desktop/weather/src/components/LocationSearchBar/LocationSearchBar.js\";\nimport React from 'react';\n\nclass LocationSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        queryText: e.target.value\n      });\n\n      if (this.state.queryText.length >= 2) {\n        this.fetchDataByZip(e.target.value);\n      }\n    };\n\n    this.fetchDataByZip = queryText => {\n      const url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/' + queryText + '.json?access_token=pk.eyJ1IjoidXNkYXJqaSIsImEiOiJjanhvbnNqY2QwODczM21ybnJybGUzM3l0In0.hUTTdbflff_BO_c7S3MldQ';\n      fetch(url).then(results => results.json()).then(sdata => {\n        this.setState({\n          data: sdata\n        });\n      });\n    };\n\n    this.state = {\n      data: null,\n      queryText: \"\"\n    };\n  }\n\n  render() {\n    let options = [];\n\n    if (this.state.data != null) {\n      console.log(this.state.data);\n\n      for (let i = 0; i < this.state.data.features; i++) {\n        options[i] = this.state.data.features[i][\"place_name\"];\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"locationSearchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Location\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, options)));\n  }\n\n}\n\nexport default LocationSearchBar;","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/components/LocationSearchBar/LocationSearchBar.js"],"names":["React","LocationSearchBar","Component","constructor","props","handleChange","e","setState","queryText","target","value","state","length","fetchDataByZip","url","fetch","then","results","json","sdata","data","render","options","console","log","i","features"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAAgD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,YARmB,GAQHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEF,CAAC,CAACG,MAAF,CAASC;AADR,OAAd;;AAGA,UAAG,KAAKC,KAAL,CAAWH,SAAX,CAAqBI,MAArB,IAA6B,CAAhC,EAAkC;AAClC,aAAKC,cAAL,CAAoBP,CAAC,CAACG,MAAF,CAASC,KAA7B;AAAqC;AACtC,KAdkB;;AAAA,SAgBnBG,cAhBmB,GAgBDL,SAAD,IAAe;AAC9B,YAAMM,GAAG,GAAG,uDAAqDN,SAArD,GAA+D,8GAA3E;AACAO,MAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADjB,EAECF,IAFD,CAEOG,KAAD,IAAW;AACf,aAAKZ,QAAL,CAAc;AACZa,UAAAA,IAAI,EAAGD;AADK,SAAd;AAGD,OAND;AAOD,KAzBkB;;AAEjB,SAAKR,KAAL,GAAa;AACXS,MAAAA,IAAI,EAAG,IADI;AAEXZ,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAqBDa,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAC,EAAZ;;AACA,QAAG,KAAKX,KAAL,CAAWS,IAAX,IAAiB,IAApB,EAA0B;AACxBG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWS,IAAvB;;AACA,WAAI,IAAIK,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKd,KAAL,CAAWS,IAAX,CAAgBM,QAA/B,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CH,QAAAA,OAAO,CAACG,CAAD,CAAP,GAAW,KAAKd,KAAL,CAAWS,IAAX,CAAgBM,QAAhB,CAAyBD,CAAzB,EAA4B,YAA5B,CAAX;AACF;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,UAA/B;AAA0C,MAAA,QAAQ,EAAE,KAAKpB,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiB,OADH,CADF,CAFF,CADF;AAUD;;AA9C6C;;AAiDhD,eAAerB,iBAAf","sourcesContent":["import React from 'react';\n\n\nclass LocationSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data : null,\n      queryText: \"\",\n    };\n  }\n  \n  handleChange = (e) => {\n    this.setState({\n      queryText: e.target.value,\n    });\n    if(this.state.queryText.length>=2){\n    this.fetchDataByZip(e.target.value);}\n  };\n\n  fetchDataByZip = (queryText) => {\n    const url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/'+queryText+'.json?access_token=pk.eyJ1IjoidXNkYXJqaSIsImEiOiJjanhvbnNqY2QwODczM21ybnJybGUzM3l0In0.hUTTdbflff_BO_c7S3MldQ';\n    fetch(url)\n    .then(results => results.json())\n    .then((sdata) => {\n      this.setState({\n        data : sdata,\n      });\n    });\n  }\n\n  render() {\n    let options=[];\n    if(this.state.data!=null) {\n      console.log(this.state.data);\n      for(let i=0; i<this.state.data.features; i++) {\n        options[i]=this.state.data.features[i][\"place_name\"];\n     } \n    }\n    return (\n      <div className=\"locationSearchBar\">\n        <input type=\"text\" placeholder=\"Location\" onChange={this.handleChange}/>\n        <ul>\n          <li>\n            {options}\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default LocationSearchBar;"]},"metadata":{},"sourceType":"module"}