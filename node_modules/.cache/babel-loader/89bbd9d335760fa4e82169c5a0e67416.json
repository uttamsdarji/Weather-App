{"ast":null,"code":"import React from 'react';\nimport { WeatherAPI } from '../APIKeys.js';\n\nclass WeatherData extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMyLocation = () => {\n      let location = null;\n      let latitude = null;\n      let longitude = null;\n\n      if (window.navigator && window.navigator.geolocation) {\n        location = window.navigator.geolocation;\n      }\n\n      if (location) {\n        location.getCurrentPosition(position => {\n          latitude = position.coords.latitude;\n          longitude = position.coords.longitude;\n          this.props.setLatLong(latitude, longitude);\n          this.props.setCity(this.props.data.feature); // localStorage.setItem('cityName', this.props.data.name);\n        });\n      }\n    };\n\n    this.newData = data => {\n      this.props.newData(data);\n    };\n\n    this.fetchDataByGeo = (latitude, longitude) => {\n      const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=' + WeatherAPI;\n      fetch(url).then(results => results.json()).then(wdata => {\n        this.newData(wdata);\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.latitude) {\n      this.getMyLocation();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default WeatherData;","map":{"version":3,"sources":["/Users/uttamdarji/Weather-App/src/components/WeatherData.js"],"names":["React","WeatherAPI","WeatherData","Component","getMyLocation","location","latitude","longitude","window","navigator","geolocation","getCurrentPosition","position","coords","props","setLatLong","setCity","data","feature","newData","fetchDataByGeo","url","fetch","then","results","json","wdata","componentDidMount","componentDidUpdate","prevProps","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAExCC,aAFwC,GAExB,MAAM;AACpB,UAAIC,QAAQ,GAAG,IAAf;AACA,UAAIC,QAAQ,GAAG,IAAf;AACA,UAAIC,SAAS,GAAG,IAAhB;;AACA,UAAIC,MAAM,CAACC,SAAP,IAAoBD,MAAM,CAACC,SAAP,CAAiBC,WAAzC,EAAsD;AACpDL,QAAAA,QAAQ,GAAGG,MAAM,CAACC,SAAP,CAAiBC,WAA5B;AACD;;AACD,UAAIL,QAAJ,EAAa;AACXA,QAAAA,QAAQ,CAACM,kBAAT,CAA8BC,QAAD,IAAc;AACzCN,UAAAA,QAAQ,GAAIM,QAAQ,CAACC,MAAT,CAAgBP,QAA5B;AACAC,UAAAA,SAAS,GAAIK,QAAQ,CAACC,MAAT,CAAgBN,SAA7B;AACA,eAAKO,KAAL,CAAWC,UAAX,CAAsBT,QAAtB,EAAgCC,SAAhC;AACA,eAAKO,KAAL,CAAWE,OAAX,CAAmB,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,OAAnC,EAJyC,CAKzC;AACD,SAND;AAOD;AACF,KAlBuC;;AAAA,SAoBxCC,OApBwC,GAoB7BF,IAAD,IAAU;AAClB,WAAKH,KAAL,CAAWK,OAAX,CAAmBF,IAAnB;AACD,KAtBuC;;AAAA,SAwBxCG,cAxBwC,GAwBvB,CAACd,QAAD,EAAUC,SAAV,KAAwB;AACvC,YAAMc,GAAG,GAAG,yDAAyDf,QAAzD,GAAoE,OAApE,GAA8EC,SAA9E,GAA0F,SAA1F,GAAsGN,UAAlH;AACAqB,MAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADjB,EAECF,IAFD,CAEOG,KAAD,IAAW;AACf,aAAKP,OAAL,CAAaO,KAAb;AACD,OAJD;AAKD,KA/BuC;AAAA;;AAiCxCC,EAAAA,iBAAiB,GAAG;AAClB,QAAG,CAAC,KAAKb,KAAL,CAAWR,QAAf,EAAyB;AACvB,WAAKF,aAAL;AAED;AAEF;;AAGDwB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKf,KAAL,CAAWR,QAAX,KAAwBuB,SAAS,CAACvB,QAAlC,IAA8C,KAAKQ,KAAL,CAAWP,SAAX,KAAyBsB,SAAS,CAACtB,SAArF,EAAgG;AAC9F,WAAKa,cAAL,CAAoB,KAAKN,KAAL,CAAWR,QAA/B,EAAwC,KAAKQ,KAAL,CAAWP,SAAnD;AACD;AACF;;AAEDuB,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;;AAlDuC;;AAqD1C,eAAe5B,WAAf","sourcesContent":["import React from 'react';\nimport { WeatherAPI } from '../APIKeys.js';\n\nclass WeatherData extends React.Component {\n\n  getMyLocation = () => {\n    let location = null;\n    let latitude = null;\n    let longitude = null;\n    if (window.navigator && window.navigator.geolocation) {\n      location = window.navigator.geolocation\n    }\n    if (location){\n      location.getCurrentPosition( (position) => {\n        latitude = (position.coords.latitude);\n        longitude = (position.coords.longitude);\n        this.props.setLatLong(latitude, longitude);\n        this.props.setCity(this.props.data.feature);\n        // localStorage.setItem('cityName', this.props.data.name);\n      });\n    }  \n  }  \n\n  newData = (data) => {\n    this.props.newData(data);\n  }\n\n  fetchDataByGeo = (latitude,longitude) => {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=' + WeatherAPI;\n    fetch(url)\n    .then(results => results.json())\n    .then((wdata) => {\n      this.newData(wdata);\n    });\n  }\n\n  componentDidMount() {\n    if(!this.props.latitude) {\n      this.getMyLocation();\n      \n    }\n    \n  }\n \n\n  componentDidUpdate(prevProps) {\n    if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n      this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default WeatherData;"]},"metadata":{},"sourceType":"module"}