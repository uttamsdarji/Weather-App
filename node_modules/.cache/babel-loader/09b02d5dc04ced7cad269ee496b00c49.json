{"ast":null,"code":"var _jsxFileName = \"/Users/uttamdarji/Desktop/weather/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleZipChange = this.handleZipChange.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n  }\n\n  handleZipChange(e) {\n    this.props.onZipChange(e.target.value);\n  }\n\n  handleCountryChange(e) {\n    this.props.onCountryChange(e.target.value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Zip Code\",\n      value: this.props.zipCode,\n      onChange: this.handleZipChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Country Code\",\n      value: this.props.countryCode,\n      onChange: this.handleCountryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass WeatherTitle extends React.Component {\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Weather in \", this.props.zipCode, \",\", this.props.countryCode);\n  }\n\n}\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = {};\n  }\n\n  fetchDataByZip(zipCode, countryCode) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(data => {\n      return data;\n    });\n  }\n\n  fetchDataByGeo(latitude, longitude) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url).then(results => results.json()).then(data => {\n      return data;\n    });\n  } // componentDidMount() {\n  //     const latitude = geolocation.latitude;\n  //     const longitude = geolocation.longitude;\n  //     if (latitude!== null){\n  //         this.data = this.fetchDataByGeo(latitude,longitude);\n  //     }\n  // }\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n      this.data = this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n  }\n\n  render() {\n    const data = this.props.data;\n\n    if (this.data.weather) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, data.name);\n    } else return null; // return null;\n\n  }\n\n}\n\nlet geolocation = {\n  location: null,\n  latitude: null,\n  longitude: null\n};\n\nclass WeatherApp extends React.Component {\n  constructor(props) {\n    super(props); //this.getMyLocation();\n    //this.getMyLocation();\n\n    this.getMyLocation = e => {\n      // let location = null;\n      // let latitude = null;\n      // let longitude = null;\n      if (geolocation.location == null) {\n        if (window.navigator && window.navigator.geolocation) {\n          geolocation.location = window.navigator.geolocation;\n        }\n\n        if (geolocation.location) {\n          geolocation.location.getCurrentPosition(function (position) {\n            // geolocation.latitude = Math.round(position.coords.latitude);\n            // geolocation.longitude= Math.round(position.coords.longitude);\n            // console.log(geolocation.latitude);\n            // console.log(geolocation.longitude);\n            this.setState({\n              latitude: Math.round(position.coords.latitude),\n              longitude: Math.round(position.coords.longitude)\n            });\n          });\n        }\n      }\n    };\n\n    this.state = {\n      zipCode: \"\",\n      countryCode: \"\",\n      latitude: geolocation.latitude,\n      longitude: geolocation.longitude\n    };\n    console.log(this.state.latitude);\n    console.log(this.state.longitude);\n    this.handleZipChange = this.handleZipChange.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n  }\n\n  handleZipChange(zipCode) {\n    this.setState({\n      zipCode: zipCode\n    });\n  }\n\n  handleCountryChange(countryCode) {\n    this.setState({\n      countryCode: countryCode\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      onZipChange: this.handleZipChange,\n      onCountryChange: this.handleCountryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(WeatherTitle, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(WeatherData, {\n      zipCode: this.state.zipCode,\n      countryCode: this.state.countryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render( //<SearchBar />,\nReact.createElement(WeatherApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 164\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/index.js"],"names":["React","ReactDOM","SearchBar","Component","constructor","props","handleZipChange","bind","handleCountryChange","e","onZipChange","target","value","onCountryChange","render","zipCode","countryCode","WeatherTitle","WeatherData","data","fetchDataByZip","url","fetch","then","results","json","fetchDataByGeo","latitude","longitude","componentDidUpdate","prevProps","weather","name","geolocation","location","WeatherApp","getMyLocation","window","navigator","getCurrentPosition","position","setState","Math","round","coords","state","console","log","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleZipChange = this.handleZipChange.bind(this);\n        this.handleCountryChange = this.handleCountryChange.bind(this);\n    }\n    \n    handleZipChange(e) {\n        this.props.onZipChange(e.target.value);\n    }\n\n    handleCountryChange(e) {\n        this.props.onCountryChange(e.target.value);\n    }\n\n    render() {\n        return(\n            <div className=\"search\">\n                <input type=\"text\" placeholder=\"Zip Code\" value={this.props.zipCode} onChange={this.handleZipChange} />\n                <input type=\"text\" placeholder=\"Country Code\" value={this.props.countryCode} onChange={this.handleCountryChange} />\n            </div>\n        );\n    }\n}\n\nclass  WeatherTitle extends React.Component {\n    render() {\n        return (\n            <h1>Weather in {this.props.zipCode},{this.props.countryCode}</h1>\n        );\n    }\n}\n\nclass WeatherData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.data = {}\n    }\n    fetchDataByZip(zipCode,countryCode) {\n        const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n        fetch(url)\n        .then(results => results.json())\n        .then((data) => {return data});\n    }\n\n    fetchDataByGeo(latitude,longitude) {\n        const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n        fetch(url)\n        .then(results => results.json())\n        .then((data) => {return data});\n    }\n\n    // componentDidMount() {\n    //     const latitude = geolocation.latitude;\n    //     const longitude = geolocation.longitude;\n    //     if (latitude!== null){\n    //         this.data = this.fetchDataByGeo(latitude,longitude);\n    //     }\n    // }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n          this.data = this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n        }\n      }\n\n    render() {\n        const data = this.props.data;\n        if(this.data.weather) {\n            return(\n                <h1>{data.name}</h1>\n            );\n        } else return null;\n        // return null;\n    }\n}\n\nlet geolocation = {\n    location: null,\n    latitude: null,\n    longitude: null,\n}\n\nclass WeatherApp extends React.Component {\n    constructor(props) {\n        super(props);\n        //this.getMyLocation();\n        //this.getMyLocation();\n        this.state = {\n            zipCode: \"\",\n            countryCode: \"\",\n            latitude: geolocation.latitude,\n            longitude: geolocation.longitude,\n        };\n        console.log(this.state.latitude);\n        console.log(this.state.longitude);\n        this.handleZipChange = this.handleZipChange.bind(this);\n        this.handleCountryChange = this.handleCountryChange.bind(this);\n    }\n\n    getMyLocation = (e) => {\n        // let location = null;\n        // let latitude = null;\n        // let longitude = null;\n        if (geolocation.location == null) {\n            if (window.navigator && window.navigator.geolocation) {\n                geolocation.location = window.navigator.geolocation\n            }\n            if (geolocation.location){\n                geolocation.location.getCurrentPosition(function (position) {\n                    // geolocation.latitude = Math.round(position.coords.latitude);\n                    // geolocation.longitude= Math.round(position.coords.longitude);\n                    // console.log(geolocation.latitude);\n                    // console.log(geolocation.longitude);\n                    this.setState({\n                        latitude: Math.round(position.coords.latitude),\n                        longitude: Math.round(position.coords.longitude),\n                    });\n                })\n            }\n        }\n        \n    }\n\n    handleZipChange(zipCode) {\n        this.setState({\n          zipCode: zipCode,  \n        })\n    }\n\n    handleCountryChange(countryCode) {\n        this.setState({\n          countryCode: countryCode,  \n        })\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <SearchBar \n                    zipCode={this.state.zipCode}\n                    countryCode={this.state.countryCode}\n                    latitude={this.state.latitude}\n                    longitude={this.state.longitude}\n                    onZipChange={this.handleZipChange}\n                    onCountryChange={this.handleCountryChange}\n                />\n                {/* <Clock /> */}\n                <WeatherTitle zipCode={this.state.zipCode} countryCode={this.state.countryCode} />\n                <WeatherData zipCode={this.state.zipCode} countryCode={this.state.countryCode} />\n            </div>\n            \n        );\n    }\n}\n\n\nReactDOM.render(\n    //<SearchBar />,\n    <WeatherApp />,\n    document.getElementById(\"root\")\n);"]},"metadata":{},"sourceType":"module"}