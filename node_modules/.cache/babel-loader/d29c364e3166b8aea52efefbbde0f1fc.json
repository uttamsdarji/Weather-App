{"ast":null,"code":"import React from 'react';\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMyLocation = () => {\n      this.props.getMyLocation();\n    };\n\n    this.newData = data => {\n      this.props.newData(data);\n    };\n\n    this.fetchDataByGeo = (latitude, longitude) => {\n      const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n      fetch(url).then(results => results.json()).then(wdata => {\n        this.newData(wdata);\n      });\n    };\n\n    this.getMyLocation();\n  }\n\n  componentDidMount() {\n    if (this.props.zipCode && this.props.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (this.props.latitude !== null && this.props.longitude !== null) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n      this.fetchDataByZip(this.props.zipCode, this.props.countryCode);\n    }\n\n    if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n      this.fetchDataByGeo(this.props.latitude, this.props.longitude);\n    }\n  }\n\n  render() {\n    //  const data = this.props.data;\n    // while(!data) {\n    //     return(\n    //       <div className=\"loader\">\n    //         <div class=\"lds-hourglass\"></div>\n    //       </div>\n    //     );\n    // }\n    return null; // else return null;\n  }\n\n}\n\nexport default WeatherData;","map":{"version":3,"sources":["/Users/uttamdarji/Desktop/weather/src/components/WeatherData/WeatherData.js"],"names":["React","WeatherData","Component","constructor","props","getMyLocation","newData","data","fetchDataByGeo","latitude","longitude","url","fetch","then","results","json","wdata","componentDidMount","zipCode","countryCode","fetchDataByZip","componentDidUpdate","prevProps","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,aALmB,GAKH,MAAM;AACpB,WAAKD,KAAL,CAAWC,aAAX;AACD,KAPkB;;AAAA,SAkBnBC,OAlBmB,GAkBRC,IAAD,IAAU;AAClB,WAAKH,KAAL,CAAWE,OAAX,CAAmBC,IAAnB;AACD,KApBkB;;AAAA,SAsBnBC,cAtBmB,GAsBF,CAACC,QAAD,EAAUC,SAAV,KAAwB;AACvC,YAAMC,GAAG,GAAG,yDAAyDF,QAAzD,GAAoE,OAApE,GAA8EC,SAA9E,GAA0F,yCAAtG;AACAE,MAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADjB,EAECF,IAFD,CAEOG,KAAD,IAAW;AACf,aAAKV,OAAL,CAAaU,KAAb;AACD,OAJD;AAKD,KA7BkB;;AAEjB,SAAKX,aAAL;AACD;;AA4BDY,EAAAA,iBAAiB,GAAG;AAClB,QAAG,KAAKb,KAAL,CAAWc,OAAX,IAAsB,KAAKd,KAAL,CAAWe,WAApC,EAAgD;AAC9C,WAAKC,cAAL,CAAoB,KAAKhB,KAAL,CAAWc,OAA/B,EAAuC,KAAKd,KAAL,CAAWe,WAAlD;AACD;;AACD,QAAG,KAAKf,KAAL,CAAWK,QAAX,KAAsB,IAAtB,IAA8B,KAAKL,KAAL,CAAWM,SAAX,KAAuB,IAAxD,EAA6D;AAC3D,WAAKF,cAAL,CAAoB,KAAKJ,KAAL,CAAWK,QAA/B,EAAwC,KAAKL,KAAL,CAAWM,SAAnD;AACD;AACF;;AAGDW,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKlB,KAAL,CAAWc,OAAX,KAAuBI,SAAS,CAACJ,OAAjC,IAA4C,KAAKd,KAAL,CAAWe,WAAX,KAA2BG,SAAS,CAACH,WAArF,EAAkG;AAChG,WAAKC,cAAL,CAAoB,KAAKhB,KAAL,CAAWc,OAA/B,EAAuC,KAAKd,KAAL,CAAWe,WAAlD;AACD;;AACD,QAAI,KAAKf,KAAL,CAAWK,QAAX,KAAwBa,SAAS,CAACb,QAAlC,IAA8C,KAAKL,KAAL,CAAWM,SAAX,KAAyBY,SAAS,CAACZ,SAArF,EAAgG;AAC9F,WAAKF,cAAL,CAAoB,KAAKJ,KAAL,CAAWK,QAA/B,EAAwC,KAAKL,KAAL,CAAWM,SAAnD;AACD;AACF;;AAEDa,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,WAAO,IAAP,CAVO,CAWP;AACD;;AA/DuC;;AAkE1C,eAAetB,WAAf","sourcesContent":["import React from 'react';\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getMyLocation();\n  }\n\n  getMyLocation = () => {\n    this.props.getMyLocation();\n  }\n\n  // fetchDataByZip = (zipCode,countryCode) => {\n  //   const url = 'https://api.openweathermap.org/data/2.5/weather?zip=' + zipCode + ',' + countryCode + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n  //   fetch(url)\n  //   .then(results => results.json())\n  //   .then((wdata) => {\n  //     this.newData(wdata);\n  //   });\n  // }\n\n  newData = (data) => {\n    this.props.newData(data);\n  }\n\n  fetchDataByGeo = (latitude,longitude) => {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=9b32cf97b04c03ad2e6f0960ea7bdce3';\n    fetch(url)\n    .then(results => results.json())\n    .then((wdata) => {\n      this.newData(wdata);\n    });\n  }\n\n  componentDidMount() {\n    if(this.props.zipCode && this.props.countryCode){\n      this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n    }\n    if(this.props.latitude!==null && this.props.longitude!==null){\n      this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n    }\n  }\n \n\n  componentDidUpdate(prevProps) {\n    if (this.props.zipCode !== prevProps.zipCode || this.props.countryCode !== prevProps.countryCode) {\n      this.fetchDataByZip(this.props.zipCode,this.props.countryCode);\n    }\n    if (this.props.latitude !== prevProps.latitude || this.props.longitude !== prevProps.longitude) {\n      this.fetchDataByGeo(this.props.latitude,this.props.longitude);\n    }\n  }\n\n  render() {\n    //  const data = this.props.data;\n    // while(!data) {\n    //     return(\n    //       <div className=\"loader\">\n    //         <div class=\"lds-hourglass\"></div>\n    //       </div>\n          \n    //     );\n    // }\n    return null;\n    // else return null;\n  }\n}\n\nexport default WeatherData;"]},"metadata":{},"sourceType":"module"}